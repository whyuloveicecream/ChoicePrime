import React, { createContext, useContext, useMemo, useState, useEffect } from 'react'

const I18nContext = createContext({
  lang: 'en',
  t: (key) => key,
  setLang: () => {}
})

const translations = {
  en: {
    // General
    'app.title': 'Zama Learning Platform',
    'app.subtitle': "Learn Zama's Fully Homomorphic Encryption technology and experience privacy-preserving blockchain computing",
    'sidebar.title': 'ZamaSchool',
    'sidebar.subtitle': 'Click chapter to start learning',
    'progress.title': 'Learning Progress',
    'wallet.connected': 'Wallet Connected',
    'wallet.required.title': 'Wallet Connection Required',
    'wallet.required.desc': "Please connect your wallet to continue learning this chapter's content.",
    'nav.prev': '← Previous',
    'nav.next': 'Next →',
    'footer.text': 'Powered by Zama | Fully Homomorphic Encryption Learning Platform',
    // Chapters
    'chapter.intro': 'Course Introduction',
    'chapter.zama_intro': 'Zama Technology Introduction',
    'chapter.sdk': 'SDK Introduction',
    'chapter.number_storage': 'Encrypted Number Storage',
    'chapter.number_decrypt': 'Number Decryption',
    'chapter.address_storage': 'Encrypted Address Storage',
    'chapter.address_decrypt': 'Address Decryption',
    'chapter.onchain_decrypt': 'Onchain Decryption Request',
    'chapter.calculations': 'FHE Encrypted Calculations',
    'chapter.number_comparison': 'Encrypted Number Comparison',
    'chapter.conclusion': 'Learning Summary',
    // Intro
    'intro.path_guide': 'Learning Path Guide',
    'intro.welcome': "Welcome to ZamaSchool! This is an interactive platform designed specifically for learning Zama's Fully Homomorphic Encryption technology. Follow these steps to learn progressively:",
    'intro.prep_title': 'Preparation Before Learning',
    'intro.experience_title': 'Learning Experience:',
    'intro.experience_1': 'Experience real blockchain interaction processes',
    'intro.experience_2': 'Learn encrypted data storage and reading operations',
    'intro.experience_3': "Practice using Zama's FHE capabilities",
    'intro.experience_4': 'Understand how decentralized applications work',
    'intro.privacy_title': 'Privacy Protection Features:',
    'intro.privacy_1': 'Data is fully encrypted on the blockchain',
    'intro.privacy_2': 'Only you can decrypt your own data',
    'intro.privacy_3': 'Supports mathematical operations on encrypted data',
    'intro.privacy_4': 'Third parties cannot access your private information',
    // Chapter descriptions
    'desc.zama_intro': 'Deep dive into Zama FHE technology principles and architecture',
    'desc.sdk': "Understand basic concepts and configuration of Zama frontend SDK",
    'desc.number_storage': 'Learn how to encrypt numbers and store them on blockchain',
    'desc.number_decrypt': 'Master methods for reading and decrypting numbers from blockchain',
    'desc.address_storage': 'Experience encrypted storage of Ethereum addresses',
    'desc.address_decrypt': 'Practice address data decryption operations',
    'desc.onchain_decrypt': 'Learn requestDecryption for onchain asynchronous decryption',
    'desc.calculations': 'Explore the powerful capabilities of homomorphic encrypted computation',
    'desc.number_comparison': 'Learn encrypted number comparison operations and conditional logic',
    // Conclusion
    'conclusion.title': 'Congratulations on Completing the Course!',
    'conclusion.desc': 'You have mastered the core concepts of Zama FHE technology:',
    'conclusion.li1': 'Understood the basic principles of Fully Homomorphic Encryption',
    'conclusion.li2': 'Learned to use the Zama frontend SDK',
    'conclusion.li3': 'Mastered encrypted data storage and retrieval',
    'conclusion.li4': 'Experienced privacy-preserving computation capabilities',
    'conclusion.next_steps': 'Next Steps:',
    'conclusion.next1': 'Try building your own privacy-preserving DApp',
    'conclusion.next2': "Deep dive into advanced features of Zama's Solidity library",
    'conclusion.next3': 'Explore more complex FHE algorithms and application scenarios',
    'conclusion.next4': 'Join the Zama community and share your learning experience',
    // ZamaIntro
    'zama.title': 'Zama Technology Introduction',
    'zama.what_is': 'What is Zama?',
    'zama.what_is_desc': "Zama is a pioneering company in Fully Homomorphic Encryption (FHE) technology, dedicated to enabling blockchain applications to perform computations directly on encrypted data without decryption, thus achieving true privacy-preserving computation.",
    'zama.core_tech': 'Core Technologies:',
    'zama.core_tech_1': 'Fully Homomorphic Encryption (FHE)',
    'zama.core_tech_2': 'Zero-Knowledge Proof Integration',
    'zama.core_tech_3': 'Privacy-Preserving Smart Contracts',
    'zama.core_tech_4': 'Programmable Encryption',
    'zama.use_cases': 'Application Scenarios:',
    'zama.use_case_1': 'Private DeFi Protocols',
    'zama.use_case_2': 'Confidential Voting Systems',
    'zama.use_case_3': 'Private Auction Platforms',
    'zama.use_case_4': 'Protected AI Computation',
    'zama.fhe_principles': 'Fully Homomorphic Encryption Principles',
    'zama.traditional_vs_fhe': 'Traditional Encryption vs FHE:',
    'zama.traditional': 'Traditional Encryption',
    'zama.traditional_desc': 'Data must be decrypted before computation\nData exposed during computation\nLimited privacy protection',
    'zama.fhe': 'FHE Encryption',
    'zama.fhe_desc': 'Compute directly on encrypted data\nData remains encrypted at all times\nComplete privacy protection',
    'zama.fhe_examples': 'FHE Operation Examples:',
    'zama.traditional_approach': '// Traditional approach:',
    'zama.fhe_approach': '// FHE approach:',
    'zama.architecture': 'FHEVM Architecture Components',
    'zama.architecture_desc': "Zama's FHEVM (Fully Homomorphic Encryption Virtual Machine) is a complete privacy-preserving computation ecosystem:",
    'zama.solidity_lib': 'Solidity Library',
    'zama.solidity_lib_desc': 'Provides encrypted data types (euint32, ebool, etc.) and FHE operation functions',
    'zama.kms': 'KMS Key Management',
    'zama.kms_desc': 'Distributed key generation and management system ensuring key security',
    'zama.coprocessor': 'Coprocessor',
    'zama.coprocessor_desc': 'Specialized processing units for executing FHE computations with optimized performance',
    'zama.gateway': 'Gateway',
    'zama.gateway_desc': 'Coordinates encrypted inputs, access control, and cross-chain bridging',
    'zama.relayer': 'Relayer',
    'zama.relayer_desc': 'Service layer connecting users with FHE infrastructure',
    'zama.oracle': 'Oracle',
    'zama.oracle_desc': 'Handles asynchronous decryption and external data integration',
    'zama.data_types': 'Supported Encrypted Data Types',
    'zama.ebool': 'Encrypted Boolean',
    'zama.ebool_desc': '2-bit encrypted boolean type',
    'zama.euints': 'Encrypted Integers',
    'zama.euints_desc': 'Unsigned integers of various bit lengths',
    'zama.eaddress': 'Encrypted Address',
    'zama.eaddress_desc': '160-bit Ethereum address type',
    'zama.euint256': 'Large Integer',
    'zama.euint256_desc': '256-bit large number type',
    'zama.operations': 'FHE Operations',
    'zama.arithmetic': 'Arithmetic Operations',
    'zama.comparison': 'Comparison Operations',
    'zama.logical': 'Logical Operations',
    'zama.learning_journey': 'Your Learning Journey Ahead',
    'zama.learning_journey_desc': 'Through this course, you will gradually master the core concepts and practical applications of Zama FHE technology:',
    'zama.fundamentals': 'Fundamentals',
    'zama.fundamentals_1': 'SDK configuration and initialization',
    'zama.fundamentals_2': 'Encrypted data storage',
    'zama.fundamentals_3': 'User decryption operations',
    'zama.advanced': 'Advanced Topics',
    'zama.advanced_1': 'Onchain asynchronous decryption',
    'zama.advanced_2': 'FHE computation operations',
    'zama.advanced_3': 'Complex application scenarios',
    'zama.ready': 'Ready to start your privacy computation journey?',
    // SDK Demo
    'sdk.title': 'Step 1: Zama Frontend SDK Introduction',
    'sdk.what_is': 'What is Zama SDK?',
    'sdk.what_is_desc': 'Zama SDK is a JavaScript library used to interact with FHEVM (Fully Homomorphic Encryption Virtual Machine) in frontend applications.',
    'sdk.feature_1': 'Supports data encryption and decryption',
    'sdk.feature_2': 'Seamless integration with smart contracts',
    'sdk.feature_3': 'Protects user data privacy',
    'sdk.code_example': 'Frontend Code Example:',
    'sdk.step1': 'Step 1: Install SDK',
    'sdk.install_btn': 'Click to Install SDK',
    'sdk.install_success': 'SDK installed successfully!',
    'sdk.step2': 'Step 2: Initialize SDK',
    'sdk.init_desc': 'Click the button below to initialize the Zama SDK. This will create an FHEVM instance for subsequent encryption operations.',
    'sdk.connect_wallet': 'Please connect your wallet before initializing the SDK',
    'sdk.initializing': 'Initializing...',
    'sdk.init_btn': 'Click to Initialize SDK',
    'sdk.init_success': 'SDK initialized successfully!',
    'sdk.init_failed': 'Initialization failed:',
    'sdk.instance_created': 'FHEVM Instance Created',
    'sdk.instance_desc': 'SDK has been successfully initialized, now you can perform encryption operations!',
    'sdk.config_title': 'Instance Configuration:',
    'sdk.config_network': 'Network: Sepolia Testnet',
    'sdk.config_chain': 'Chain ID: 11155111',
    'sdk.config_gateway': 'Gateway Chain ID: 55815',
    'sdk.config_relayer': 'Relayer Service: Connected',
    'sdk.next_learn': 'What You Will Learn Next:',
    'sdk.next_1': 'Encrypted number storage',
    'sdk.next_2': 'Number decryption and retrieval',
    'sdk.next_3': 'Encrypted address storage',
    'sdk.next_4': 'Address decryption and retrieval',
    'sdk.next_5': 'FHE calculation operations',
    'sdk.note': 'Note:',
    'sdk.note_desc': 'Please complete SDK initialization before proceeding to the next step. The initialization process creates a connection to the Zama network, which is a prerequisite for performing encryption operations.',
    // Common
    'common.init_sdk_first': 'Please complete SDK initialization in Step 3 first',
    'common.sdk_required_for_crypto': 'SDK must be initialized before performing encryption operations',
    'common.learning_objectives': 'Learning Objectives:',
    'common.contract_code': 'Smart Contract Code:',
    'common.frontend_encrypt_code': 'Frontend Encryption Code:',
    'common.tx_hash': 'Transaction Hash',
    'common.contract_address': 'Contract Address',
    'common.tech_notes': 'Technical Notes:',
    // Number Storage
    'number_storage.section_title': 'Step 2: Encrypted Number Storage',
    'number_storage.ensure_wallet_and_input': 'Please connect wallet and enter a number',
    'number_storage.encrypt_failed': 'Encryption failed:',
    'number_storage.need_encrypt_first': 'Please encrypt the number first',
    'number_storage.store_success': 'Stored successfully!',
    'number_storage.store_failed': 'Store failed:',
    'number_storage.goal_1': 'Learn how to encrypt user input numbers',
    'number_storage.goal_2': 'Understand the structure of encrypted data',
    'number_storage.goal_3': 'Store encrypted data on blockchain',
    'number_storage.input_title': 'Enter the number to encrypt:',
    'number_storage.input_placeholder': 'Enter a 32-bit integer',
    'number_storage.encrypting': 'Encrypting...',
    'number_storage.encrypt_button': 'Encrypt Number',
    'number_storage.store_button': 'Store on Blockchain',
    'number_storage.encrypt_success': 'Encryption succeeded!',
    'number_storage.original_number': 'Original Number',
    'number_storage.cipher_handle': 'Ciphertext Handle',
    'number_storage.handle_note': 'The ciphertext handle is the unique identifier of the encrypted data, used to reference this encrypted number in smart contracts.',
    'number_storage.store_success_desc': 'Your encrypted number has been securely stored on the blockchain!',
    'number_storage.stored_title': 'Stored Number',
    'number_storage.stored_handle_desc': 'This is the handle of your encrypted number stored in the contract.',
    'number_storage.euint32_desc': '32-bit encrypted unsigned integer type',
    'number_storage.handle_desc': 'Reference to encrypted data on the blockchain',
    'number_storage.input_proof': 'Input Proof',
    'number_storage.input_proof_desc': 'Proof of validity for the encrypted input'
  },
  zh: {
    'app.title': 'Zama 学习平台',
    'app.subtitle': '学习 Zama 的全同态加密技术，体验隐私保护的区块链计算',
    'sidebar.title': 'ZamaSchool',
    'sidebar.subtitle': '点击章节开始学习',
    'progress.title': '学习进度',
    'wallet.connected': '钱包已连接',
    'wallet.required.title': '需要连接钱包',
    'wallet.required.desc': '请先连接钱包以继续学习本章节内容。',
    'nav.prev': '← 上一章',
    'nav.next': '下一章 →',
    'footer.text': '由 Zama 驱动 | 全同态加密学习平台',
    'chapter.intro': '课程简介',
    'chapter.zama_intro': 'Zama 技术介绍',
    'chapter.sdk': 'SDK 介绍',
    'chapter.number_storage': '加密数字存储',
    'chapter.number_decrypt': '数字解密',
    'chapter.address_storage': '加密地址存储',
    'chapter.address_decrypt': '地址解密',
    'chapter.onchain_decrypt': '链上解密请求',
    'chapter.calculations': 'FHE 加密计算',
    'chapter.number_comparison': '加密数字比较',
    'chapter.conclusion': '学习总结',
    'intro.path_guide': '学习路径指引',
    'intro.welcome': '欢迎来到 ZamaSchool！这是一个专为学习 Zama 全同态加密技术而设计的交互式平台。请按以下步骤循序渐进地学习：',
    'intro.prep_title': '学习前准备',
    'intro.experience_title': '学习体验：',
    'intro.experience_1': '体验真实的区块链交互流程',
    'intro.experience_2': '学习加密数据的存储与读取操作',
    'intro.experience_3': '实践使用 Zama 的 FHE 能力',
    'intro.experience_4': '理解去中心化应用的工作方式',
    'intro.privacy_title': '隐私保护特性：',
    'intro.privacy_1': '数据在链上始终加密存储',
    'intro.privacy_2': '只有你可以解密自己的数据',
    'intro.privacy_3': '支持对加密数据进行数学运算',
    'intro.privacy_4': '第三方无法获取你的隐私信息',
    'desc.zama_intro': '深入了解 Zama FHE 技术原理与架构',
    'desc.sdk': '理解 Zama 前端 SDK 的基本概念与配置',
    'desc.number_storage': '学习如何对数字加密并上链存储',
    'desc.number_decrypt': '掌握从区块链读取并解密数字的方法',
    'desc.address_storage': '体验以太坊地址的加密存储',
    'desc.address_decrypt': '练习地址数据的解密操作',
    'desc.onchain_decrypt': '学习使用 requestDecryption 进行链上异步解密',
    'desc.calculations': '探索同态加密计算的强大能力',
    'desc.number_comparison': '学习加密数字比较与条件逻辑',
    'conclusion.title': '🎉 恭喜完成本课程！',
    'conclusion.desc': '你已经掌握了 Zama FHE 技术的核心概念：',
    'conclusion.li1': '✅ 理解全同态加密的基本原理',
    'conclusion.li2': '✅ 学会使用 Zama 前端 SDK',
    'conclusion.li3': '✅ 掌握加密数据的存储与读取',
    'conclusion.li4': '✅ 体验隐私保护计算能力',
    'conclusion.next_steps': '🚀 下一步：',
    'conclusion.next1': '尝试构建你自己的隐私保护 DApp',
    'conclusion.next2': '深入学习 Zama Solidity 库的高级特性',
    'conclusion.next3': '探索更复杂的 FHE 算法与应用场景',
    'conclusion.next4': '加入 Zama 社区并分享你的学习经验',
    // ZamaIntro
    'zama.title': 'Zama 技术介绍',
    'zama.what_is': '什么是 Zama？',
    'zama.what_is_desc': 'Zama 是全同态加密（FHE - Fully Homomorphic Encryption）技术的先驱企业，致力于让区块链应用能够在加密数据上直接进行计算，而无需解密数据，从而实现真正的隐私保护计算。',
    'zama.core_tech': '核心技术：',
    'zama.core_tech_1': '全同态加密（FHE）',
    'zama.core_tech_2': '零知识证明集成',
    'zama.core_tech_3': '隐私保护智能合约',
    'zama.core_tech_4': '可编程加密',
    'zama.use_cases': '应用场景：',
    'zama.use_case_1': '隐私 DeFi 协议',
    'zama.use_case_2': '机密投票系统',
    'zama.use_case_3': '私有拍卖平台',
    'zama.use_case_4': '保护性 AI 计算',
    'zama.fhe_principles': '全同态加密技术原理',
    'zama.traditional_vs_fhe': '传统加密 vs FHE：',
    'zama.traditional': '传统加密',
    'zama.traditional_desc': '数据必须先解密才能计算\n计算过程中数据暴露\n隐私保护有限',
    'zama.fhe': 'FHE 加密',
    'zama.fhe_desc': '直接在加密数据上计算\n数据始终保持加密状态\n完全隐私保护',
    'zama.fhe_examples': 'FHE 运算示例：',
    'zama.traditional_approach': '// 传统方式：',
    'zama.fhe_approach': '// FHE 方式：',
    'zama.architecture': 'FHEVM 架构组件',
    'zama.architecture_desc': 'Zama 的 FHEVM（全同态加密虚拟机）是一个完整的隐私保护计算生态系统：',
    'zama.solidity_lib': 'Solidity 库',
    'zama.solidity_lib_desc': '提供加密数据类型（euint32、ebool 等）和 FHE 运算函数',
    'zama.kms': 'KMS 密钥管理',
    'zama.kms_desc': '分布式密钥生成和管理系统，确保密钥安全',
    'zama.coprocessor': '协处理器',
    'zama.coprocessor_desc': '执行 FHE 计算的专用处理单元，优化性能',
    'zama.gateway': '网关',
    'zama.gateway_desc': '协调加密输入、访问控制和跨链桥接',
    'zama.relayer': '中继器',
    'zama.relayer_desc': '连接用户和 FHE 基础设施的服务层',
    'zama.oracle': '预言机',
    'zama.oracle_desc': '处理异步解密和外部数据集成',
    'zama.data_types': '支持的加密数据类型',
    'zama.ebool': '加密布尔值',
    'zama.ebool_desc': '2 位加密布尔类型',
    'zama.euints': '加密整数',
    'zama.euints_desc': '不同位数的无符号整数',
    'zama.eaddress': '加密地址',
    'zama.eaddress_desc': '160 位以太坊地址类型',
    'zama.euint256': '大整数',
    'zama.euint256_desc': '256 位大数类型',
    'zama.operations': 'FHE 运算操作',
    'zama.arithmetic': '算术运算',
    'zama.comparison': '比较运算',
    'zama.logical': '逻辑运算',
    'zama.learning_journey': '接下来的学习之旅',
    'zama.learning_journey_desc': '通过本课程，你将逐步掌握 Zama FHE 技术的核心概念和实际应用：',
    'zama.fundamentals': '基础篇',
    'zama.fundamentals_1': 'SDK 配置和初始化',
    'zama.fundamentals_2': '加密数据存储',
    'zama.fundamentals_3': '用户解密操作',
    'zama.advanced': '进阶篇',
    'zama.advanced_1': '链上异步解密',
    'zama.advanced_2': 'FHE 计算操作',
    'zama.advanced_3': '复杂应用场景',
    'zama.ready': '准备好开始你的隐私计算之旅了吗？',
    // SDK Demo
    'sdk.title': '步骤 1：Zama 前端 SDK 介绍',
    'sdk.what_is': '什么是 Zama SDK？',
    'sdk.what_is_desc': 'Zama SDK 是一个 JavaScript 库，用于在前端应用中与 FHEVM（全同态加密虚拟机）进行交互。',
    'sdk.feature_1': '支持数据加密和解密',
    'sdk.feature_2': '与智能合约无缝集成',
    'sdk.feature_3': '保护用户数据隐私',
    'sdk.code_example': '前端代码示例：',
    'sdk.step1': '步骤 1：安装 SDK',
    'sdk.install_btn': '点击安装 SDK',
    'sdk.install_success': 'SDK 安装完成！',
    'sdk.step2': '步骤 2：初始化 SDK',
    'sdk.init_desc': '点击下面按钮来初始化 Zama SDK。这将创建 FHEVM 实例，用于后续的加密操作。',
    'sdk.connect_wallet': '请先连接钱包再初始化 SDK',
    'sdk.initializing': '初始化中...',
    'sdk.init_btn': '点击初始化 SDK',
    'sdk.init_success': 'SDK 初始化完成！',
    'sdk.init_failed': '初始化失败：',
    'sdk.instance_created': 'FHEVM 实例已创建',
    'sdk.instance_desc': 'SDK 已成功初始化，现在可以进行加密操作了！',
    'sdk.config_title': '实例配置信息：',
    'sdk.config_network': '网络：Sepolia 测试网',
    'sdk.config_chain': '链 ID：11155111',
    'sdk.config_gateway': 'Gateway 链 ID：55815',
    'sdk.config_relayer': 'Relayer 服务：已连接',
    'sdk.next_learn': '接下来你将学习：',
    'sdk.next_1': '数字加密存储',
    'sdk.next_2': '数字解密读取',
    'sdk.next_3': '地址加密存储',
    'sdk.next_4': '地址解密读取',
    'sdk.next_5': 'FHE 计算操作',
    'sdk.note': '注意：',
    'sdk.note_desc': '请完成 SDK 初始化后再进行下一步操作。初始化过程会创建与 Zama 网络的连接，这是进行加密操作的前提条件。',
    // Common
    'common.init_sdk_first': '请先完成步骤3中的SDK初始化',
    'common.sdk_required_for_crypto': 'SDK必须初始化后才能进行加密操作',
    'common.learning_objectives': '学习目标：',
    'common.contract_code': '智能合约代码:',
    'common.frontend_encrypt_code': '前端加密代码:',
    'common.tx_hash': '交易哈希',
    'common.contract_address': '合约地址',
    'common.tech_notes': '技术说明：',
    // Number Storage
    'number_storage.section_title': '步骤2: 数字加密存储',
    'number_storage.ensure_wallet_and_input': '请确保钱包已连接且输入了数字',
    'number_storage.encrypt_failed': '加密失败:',
    'number_storage.need_encrypt_first': '请先加密数字',
    'number_storage.store_success': '存储成功！',
    'number_storage.store_failed': '存储失败:',
    'number_storage.goal_1': '学习如何加密用户输入的数字',
    'number_storage.goal_2': '了解加密数据的结构',
    'number_storage.goal_3': '将加密数据存储到区块链',
    'number_storage.input_title': '输入要加密的数字：',
    'number_storage.input_placeholder': '输入一个32位整数',
    'number_storage.encrypting': '加密中...',
    'number_storage.encrypt_button': '加密数字',
    'number_storage.store_button': '存储到区块链',
    'number_storage.encrypt_success': '加密成功！',
    'number_storage.original_number': '原始数字',
    'number_storage.cipher_handle': '加密句柄',
    'number_storage.handle_note': '加密句柄是加密数据的唯一标识符，用于在智能合约中引用这个加密的数字。',
    'number_storage.store_success_desc': '你的加密数字已安全存储在区块链上！',
    'number_storage.stored_title': '已存储的数字',
    'number_storage.stored_handle_desc': '这是你存储在合约中的加密数字的句柄',
    'number_storage.euint32_desc': '32位加密无符号整数类型',
    'number_storage.handle_desc': '指向区块链上加密数据的引用',
    'number_storage.input_proof': '输入证明',
    'number_storage.input_proof_desc': '证明加密数据的有效性'
  },
  fr: {
    'app.title': 'Plateforme d’apprentissage Zama',
    'app.subtitle': "Apprenez le chiffrement homomorphe complet de Zama et découvrez l’informatique préservant la vie privée sur blockchain",
    'sidebar.title': 'ZamaSchool',
    'sidebar.subtitle': 'Cliquez sur un chapitre pour commencer',
    'progress.title': 'Progression',
    'wallet.connected': 'Portefeuille connecté',
    'wallet.required.title': 'Connexion du portefeuille requise',
    'wallet.required.desc': 'Veuillez connecter votre portefeuille pour continuer ce chapitre.',
    'nav.prev': '← Précédent',
    'nav.next': 'Suivant →',
    'footer.text': 'Propulsé par Zama | Plateforme d’apprentissage FHE',
    'chapter.intro': 'Introduction du cours',
    'chapter.zama_intro': 'Introduction à la technologie Zama',
    'chapter.sdk': 'Introduction au SDK',
    'chapter.number_storage': 'Stockage de nombres chiffrés',
    'chapter.number_decrypt': 'Déchiffrement de nombres',
    'chapter.address_storage': 'Stockage d’adresses chiffrées',
    'chapter.address_decrypt': 'Déchiffrement d’adresses',
    'chapter.onchain_decrypt': 'Demande de déchiffrement on‑chain',
    'chapter.calculations': 'Calculs chiffrés FHE',
    'chapter.number_comparison': 'Comparaison de nombres chiffrés',
    'chapter.conclusion': 'Résumé',
    'intro.path_guide': 'Guide du parcours d’apprentissage',
    'intro.welcome': "Bienvenue sur ZamaSchool ! Une plateforme interactive dédiée à l’apprentissage du FHE de Zama. Suivez ces étapes pour progresser :",
    'intro.prep_title': 'Préparation avant de commencer',
    'intro.experience_title': 'Expérience d’apprentissage :',
    'intro.experience_1': 'Vivez de vraies interactions blockchain',
    'intro.experience_2': 'Apprenez le stockage et la lecture de données chiffrées',
    'intro.experience_3': 'Pratiquez les capacités FHE de Zama',
    'intro.experience_4': 'Comprenez le fonctionnement des DApps',
    'intro.privacy_title': 'Fonctionnalités de confidentialité :',
    'intro.privacy_1': 'Données entièrement chiffrées sur la blockchain',
    'intro.privacy_2': 'Vous seul pouvez déchiffrer vos données',
    'intro.privacy_3': 'Prise en charge des opérations mathématiques sur données chiffrées',
    'intro.privacy_4': 'Aucun tiers n’accède à vos informations privées',
    'desc.zama_intro': 'Plongez dans les principes et l’architecture du FHE de Zama',
    'desc.sdk': 'Comprenez les concepts de base et la configuration du SDK frontend de Zama',
    'desc.number_storage': 'Apprenez à chiffrer des nombres et les stocker on‑chain',
    'desc.number_decrypt': 'Maîtrisez la lecture et le déchiffrement de nombres depuis la blockchain',
    'desc.address_storage': 'Découvrez le stockage chiffré des adresses Ethereum',
    'desc.address_decrypt': 'Entraînez‑vous au déchiffrement d’adresses',
    'desc.onchain_decrypt': 'Apprenez requestDecryption pour le déchiffrement asynchrone on‑chain',
    'desc.calculations': 'Explorez la puissance des calculs homomorphes',
    'desc.number_comparison': 'Apprenez la comparaison chiffrée et la logique conditionnelle',
    'conclusion.title': '🎉 Félicitations pour la fin du cours !',
    'conclusion.desc': 'Vous avez maîtrisé les concepts clés de la technologie FHE de Zama :',
    'conclusion.li1': '✅ Compréhension des principes de base du FHE',
    'conclusion.li2': '✅ Utilisation du SDK frontend de Zama',
    'conclusion.li3': '✅ Maîtrise du stockage et de la récupération de données chiffrées',
    'conclusion.li4': '✅ Expérience des capacités de calcul préservant la vie privée',
    'conclusion.next_steps': '🚀 Prochaines étapes :',
    'conclusion.next1': 'Essayez de créer votre propre DApp préservant la vie privée',
    'conclusion.next2': 'Approfondissez les fonctionnalités avancées de la bibliothèque Solidity de Zama',
    'conclusion.next3': 'Explorez des algorithmes FHE et des cas d\'usage plus complexes',
    'conclusion.next4': 'Rejoignez la communauté Zama et partagez votre expérience',
    // ZamaIntro
    'zama.title': 'Introduction à la technologie Zama',
    'zama.what_is': 'Qu\'est-ce que Zama ?',
    'zama.what_is_desc': 'Zama est une entreprise pionnière dans la technologie de chiffrement homomorphe complet (FHE), dédiée à permettre aux applications blockchain d\'effectuer des calculs directement sur des données chiffrées sans les déchiffrer, réalisant ainsi un calcul véritablement préservant la vie privée.',
    'zama.core_tech': 'Technologies clés :',
    'zama.core_tech_1': 'Chiffrement homomorphe complet (FHE)',
    'zama.core_tech_2': 'Intégration de preuves à divulgation nulle',
    'zama.core_tech_3': 'Contrats intelligents préservant la vie privée',
    'zama.core_tech_4': 'Chiffrement programmable',
    'zama.use_cases': 'Scénarios d\'application :',
    'zama.use_case_1': 'Protocoles DeFi privés',
    'zama.use_case_2': 'Systèmes de vote confidentiels',
    'zama.use_case_3': 'Plateformes d\'enchères privées',
    'zama.use_case_4': 'Calcul AI protégé',
    'zama.fhe_principles': 'Principes du chiffrement homomorphe complet',
    'zama.traditional_vs_fhe': 'Chiffrement traditionnel vs FHE :',
    'zama.traditional': 'Chiffrement traditionnel',
    'zama.traditional_desc': 'Les données doivent être déchiffrées avant le calcul\nDonnées exposées pendant le calcul\nProtection de la vie privée limitée',
    'zama.fhe': 'Chiffrement FHE',
    'zama.fhe_desc': 'Calcul direct sur les données chiffrées\nDonnées restent chiffrées en permanence\nProtection complète de la vie privée',
    'zama.fhe_examples': 'Exemples d\'opérations FHE :',
    'zama.traditional_approach': '// Approche traditionnelle :',
    'zama.fhe_approach': '// Approche FHE :',
    'zama.architecture': 'Composants de l\'architecture FHEVM',
    'zama.architecture_desc': 'Le FHEVM de Zama (Machine virtuelle de chiffrement homomorphe complet) est un écosystème complet de calcul préservant la vie privée :',
    'zama.solidity_lib': 'Bibliothèque Solidity',
    'zama.solidity_lib_desc': 'Fournit des types de données chiffrées (euint32, ebool, etc.) et des fonctions d\'opération FHE',
    'zama.kms': 'Gestion des clés KMS',
    'zama.kms_desc': 'Système de génération et de gestion distribuée des clés assurant la sécurité',
    'zama.coprocessor': 'Coprocesseur',
    'zama.coprocessor_desc': 'Unités de traitement spécialisées pour exécuter les calculs FHE avec des performances optimisées',
    'zama.gateway': 'Passerelle',
    'zama.gateway_desc': 'Coordonne les entrées chiffrées, le contrôle d\'accès et le pontage inter-chaînes',
    'zama.relayer': 'Relais',
    'zama.relayer_desc': 'Couche de service reliant les utilisateurs à l\'infrastructure FHE',
    'zama.oracle': 'Oracle',
    'zama.oracle_desc': 'Gère le déchiffrement asynchrone et l\'intégration de données externes',
    'zama.data_types': 'Types de données chiffrées pris en charge',
    'zama.ebool': 'Booléen chiffré',
    'zama.ebool_desc': 'Type booléen chiffré 2 bits',
    'zama.euints': 'Entiers chiffrés',
    'zama.euints_desc': 'Entiers non signés de différentes longueurs',
    'zama.eaddress': 'Adresse chiffrée',
    'zama.eaddress_desc': 'Type d\'adresse Ethereum 160 bits',
    'zama.euint256': 'Grand entier',
    'zama.euint256_desc': 'Type de grand nombre 256 bits',
    'zama.operations': 'Opérations FHE',
    'zama.arithmetic': 'Opérations arithmétiques',
    'zama.comparison': 'Opérations de comparaison',
    'zama.logical': 'Opérations logiques',
    'zama.learning_journey': 'Votre parcours d\'apprentissage',
    'zama.learning_journey_desc': 'À travers ce cours, vous maîtriserez progressivement les concepts fondamentaux et les applications pratiques de la technologie FHE de Zama :',
    'zama.fundamentals': 'Fondamentaux',
    'zama.fundamentals_1': 'Configuration et initialisation du SDK',
    'zama.fundamentals_2': 'Stockage de données chiffrées',
    'zama.fundamentals_3': 'Opérations de déchiffrement utilisateur',
    'zama.advanced': 'Sujets avancés',
    'zama.advanced_1': 'Déchiffrement asynchrone on-chain',
    'zama.advanced_2': 'Opérations de calcul FHE',
    'zama.advanced_3': 'Scénarios d\'application complexes',
    'zama.ready': 'Prêt à commencer votre parcours de calcul privé ?',
    // SDK Demo
    'sdk.title': 'Étape 1 : Introduction au SDK frontend Zama',
    'sdk.what_is': 'Qu\'est-ce que le SDK Zama ?',
    'sdk.what_is_desc': 'Le SDK Zama est une bibliothèque JavaScript utilisée pour interagir avec FHEVM (Machine virtuelle de chiffrement homomorphe complet) dans les applications frontend.',
    'sdk.feature_1': 'Prend en charge le chiffrement et le déchiffrement des données',
    'sdk.feature_2': 'Intégration transparente avec les contrats intelligents',
    'sdk.feature_3': 'Protège la confidentialité des données utilisateur',
    'sdk.code_example': 'Exemple de code frontend :',
    'sdk.step1': 'Étape 1 : Installer le SDK',
    'sdk.install_btn': 'Cliquer pour installer le SDK',
    'sdk.install_success': 'SDK installé avec succès !',
    'sdk.step2': 'Étape 2 : Initialiser le SDK',
    'sdk.init_desc': 'Cliquez sur le bouton ci-dessous pour initialiser le SDK Zama. Cela créera une instance FHEVM pour les opérations de chiffrement ultérieures.',
    'sdk.connect_wallet': 'Veuillez connecter votre portefeuille avant d\'initialiser le SDK',
    'sdk.initializing': 'Initialisation...',
    'sdk.init_btn': 'Cliquer pour initialiser le SDK',
    'sdk.init_success': 'SDK initialisé avec succès !',
    'sdk.init_failed': 'Échec de l\'initialisation :',
    'sdk.instance_created': 'Instance FHEVM créée',
    'sdk.instance_desc': 'Le SDK a été initialisé avec succès, vous pouvez maintenant effectuer des opérations de chiffrement !',
    'sdk.config_title': 'Configuration de l\'instance :',
    'sdk.config_network': 'Réseau : Testnet Sepolia',
    'sdk.config_chain': 'ID de chaîne : 11155111',
    'sdk.config_gateway': 'ID de chaîne Gateway : 55815',
    'sdk.config_relayer': 'Service Relayer : Connecté',
    'sdk.next_learn': 'Ce que vous apprendrez ensuite :',
    'sdk.next_1': 'Stockage de nombres chiffrés',
    'sdk.next_2': 'Déchiffrement et récupération de nombres',
    'sdk.next_3': 'Stockage d\'adresses chiffrées',
    'sdk.next_4': 'Déchiffrement et récupération d\'adresses',
    'sdk.next_5': 'Opérations de calcul FHE',
    'sdk.note': 'Note :',
    'sdk.note_desc': 'Veuillez terminer l\'initialisation du SDK avant de passer à l\'étape suivante. Le processus d\'initialisation crée une connexion au réseau Zama, ce qui est un prérequis pour effectuer des opérations de chiffrement.',
    // Aides communes
    'common.fetch_failed': 'Échec de la récupération :',

    // Déchiffrement du nombre
    'number_decrypt.section_title': 'Étape 3 : Déchiffrement de nombres',
    'number_decrypt.ensure_wallet_and_handle': 'Veuillez connecter votre portefeuille et saisir la poignée de chiffrement',
    'number_decrypt.decrypt_failed': 'Échec du déchiffrement :',
    'number_decrypt.no_number_warning': 'Vous n\'avez pas encore stocké de nombre dans le contrat. Veuillez d\'abord aller à l\'étape 2 pour stocker un nombre.',
    'number_decrypt.contract_read_code': 'Code de lecture du contrat :',
    'number_decrypt.frontend_decrypt_code': 'Code de déchiffrement frontend :',
    'number_decrypt.goal_1': 'Récupérer les données chiffrées depuis le contrat',
    'number_decrypt.goal_2': 'Apprendre le processus de déchiffrement utilisateur',
    'number_decrypt.goal_3': 'Comprendre la génération de paires de clés et les signatures',
    'number_decrypt.step1_title': 'Étape 1 : Récupérer votre nombre chiffré',
    'number_decrypt.fetching': 'Récupération du nombre chiffré depuis le contrat...',
    'number_decrypt.fetch_error': 'Échec de la récupération du nombre, veuillez vérifier la connexion réseau',
    'number_decrypt.fetch_button': 'Récupérer mon nombre chiffré depuis le contrat',
    'number_decrypt.fetch_button_done': '✅ Nombre chiffré récupéré depuis le contrat',
    'number_decrypt.step2_title': 'Étape 2 : Poignée de chiffrement',
    'number_decrypt.handle_desc': 'Ceci est la poignée de chiffrement récupérée depuis la blockchain',
    'number_decrypt.step3_title': 'Étape 3 : Déchiffrer les données',
    'number_decrypt.input_placeholder_handle': 'Saisir la poignée (ou cliquez sur le bouton ci-dessus pour récupérer)',
    'number_decrypt.decrypting': 'Déchiffrement...',
    'number_decrypt.decrypt_button': 'Déchiffrer le nombre',
    'number_decrypt.decrypt_success': 'Déchiffrement réussi !',
    'number_decrypt.result_label': 'Résultat du déchiffrement',
    'number_decrypt.congrats_text': 'Félicitations ! Vous avez déchiffré le nombre d\'origine.',
    'number_decrypt.process_notes': 'Notes sur le processus de déchiffrement :',
    'number_decrypt.kp': 'Génération de paire de clés',
    'number_decrypt.kp_desc': 'Créer une paire de clés temporaire pour le déchiffrement',
    'number_decrypt.eip712': 'Signature EIP712',
    'number_decrypt.eip712_desc': 'Prouver l\'identité et l\'autorisation de l\'utilisateur',
    'number_decrypt.user_sig': 'Signature utilisateur',
    'number_decrypt.user_sig_desc': 'Utiliser le portefeuille pour signer la demande de déchiffrement',
    'number_decrypt.exec_decrypt': 'Exécuter le déchiffrement',
    'number_decrypt.exec_decrypt_desc': 'Déchiffrer via le service de relais',
    'number_decrypt.security_note': 'Rappel de sécurité',
    'number_decrypt.security_note_desc': 'Seuls les utilisateurs avec les bonnes autorisations peuvent déchiffrer. Le contrat gère les permissions via ACL.',
    // Commun
    'common.init_sdk_first': 'Veuillez d\'abord terminer l\'initialisation du SDK à l\'étape 3',
    'common.sdk_required_for_crypto': 'Le SDK doit être initialisé avant d\'effectuer des opérations de chiffrement',
    'common.learning_objectives': 'Objectifs d\'apprentissage :',
    'common.contract_code': 'Code du contrat intelligent :',
    'common.frontend_encrypt_code': 'Code de chiffrement frontend :',
    'common.tx_hash': 'Hash de transaction',
    'common.contract_address': 'Adresse du contrat',
    'common.tech_notes': 'Notes techniques :',
    // Stockage Nombre
    'number_storage.section_title': 'Étape 2 : Stockage de nombres chiffrés',
    'number_storage.ensure_wallet_and_input': 'Veuillez connecter le portefeuille et saisir un nombre',
    'number_storage.encrypt_failed': 'Échec du chiffrement :',
    'number_storage.need_encrypt_first': 'Veuillez d\'abord chiffrer le nombre',
    'number_storage.store_success': 'Enregistré avec succès !',
    'number_storage.store_failed': 'Échec de l\'enregistrement :',
    'number_storage.goal_1': 'Apprendre à chiffrer les nombres saisis par l\'utilisateur',
    'number_storage.goal_2': 'Comprendre la structure des données chiffrées',
    'number_storage.goal_3': 'Stocker les données chiffrées sur la blockchain',
    'number_storage.input_title': 'Saisir le nombre à chiffrer :',
    'number_storage.input_placeholder': 'Saisir un entier 32 bits',
    'number_storage.encrypting': 'Chiffrement...',
    'number_storage.encrypt_button': 'Chiffrer le nombre',
    'number_storage.store_button': 'Stocker sur la blockchain',
    'number_storage.encrypt_success': 'Chiffrement réussi !',
    'number_storage.original_number': 'Nombre d\'origine',
    'number_storage.cipher_handle': 'Poignée de chiffrement',
    'number_storage.handle_note': 'La poignée de chiffrement est l\'identifiant unique des données chiffrées, utilisée pour référencer ce nombre chiffré dans les contrats intelligents.',
    'number_storage.store_success_desc': 'Votre nombre chiffré a été stocké en toute sécurité sur la blockchain !',
    'number_storage.stored_title': 'Nombre stocké',
    'number_storage.stored_handle_desc': 'Ceci est la poignée du nombre chiffré stocké dans le contrat.',
    'number_storage.euint32_desc': 'Type entier non signé chiffré 32 bits',
    'number_storage.handle_desc': 'Référence aux données chiffrées sur la blockchain',
    'number_storage.input_proof': 'Preuve d\'entrée',
    'number_storage.input_proof_desc': 'Preuve de validité pour l\'entrée chiffrée'
  }
}

// Merge additional i18n keys for features that were added later
Object.assign(translations.en, {
  // Common helpers
  'common.fetch_failed': 'Fetch failed:',
  'common.connect_wallet': 'Please connect your wallet',
  // Number Decryption
  'number_decrypt.section_title': 'Step 3: Number Decryption',
  'number_decrypt.ensure_wallet_and_handle': 'Please connect your wallet and enter the ciphertext handle',
  'number_decrypt.decrypt_failed': 'Decryption failed:',
  'number_decrypt.no_number_warning': 'You have not stored a number in the contract. Please go to Step 2 to store a number first.',
  'number_decrypt.contract_read_code': 'Smart Contract Read Code:',
  'number_decrypt.frontend_decrypt_code': 'Frontend Decryption Code:',
  'number_decrypt.goal_1': 'Fetch encrypted data from the smart contract',
  'number_decrypt.goal_2': 'Learn the user decryption process',
  'number_decrypt.goal_3': 'Understand keypair generation and signatures',
  'number_decrypt.step1_title': 'Step 1: Fetch your encrypted number',
  'number_decrypt.fetching': 'Fetching encrypted number from contract...',
  'number_decrypt.fetch_error': 'Failed to fetch number, please check network connection',
  'number_decrypt.fetch_button': 'Fetch my encrypted number from contract',
  'number_decrypt.fetch_button_done': '✅ Fetched my encrypted number from contract',
  'number_decrypt.step2_title': 'Step 2: Ciphertext handle',
  'number_decrypt.handle_desc': 'This is the ciphertext handle fetched from the blockchain',
  'number_decrypt.step3_title': 'Step 3: Decrypt data',
  'number_decrypt.input_placeholder_handle': 'Enter ciphertext handle (or click the button above to fetch)',
  'number_decrypt.decrypting': 'Decrypting...',
  'number_decrypt.decrypt_button': 'Decrypt Number',
  'number_decrypt.decrypt_success': 'Decryption succeeded!',
  'number_decrypt.result_label': 'Decryption Result',
  'number_decrypt.congrats_text': 'Congrats! You have successfully decrypted the original number.',
  'number_decrypt.process_notes': 'Decryption Process Notes:',
  'number_decrypt.kp': 'Keypair Generation',
  'number_decrypt.kp_desc': 'Create a temporary keypair for decryption',
  'number_decrypt.eip712': 'EIP712 Signature',
  'number_decrypt.eip712_desc': 'Prove user identity and permission',
  'number_decrypt.user_sig': 'User Signature',
  'number_decrypt.user_sig_desc': 'Use wallet to sign the decryption request',
  'number_decrypt.exec_decrypt': 'Execute Decryption',
  'number_decrypt.exec_decrypt_desc': 'Decrypt via the relayer service',
  'number_decrypt.security_note': 'Security Reminder',
  'number_decrypt.security_note_desc': 'Only users with proper permissions can decrypt. The smart contract manages permissions via ACL.',
  // Address Storage
  'address_storage.section_title': 'Step 4: Encrypted Address Storage',
  'address_storage.goal_1': 'Learn how to encrypt Ethereum addresses',
  'address_storage.goal_2': 'Understand random address generation',
  'address_storage.goal_3': 'Use the eaddress data type',
  'address_storage.frontend_encrypt_code': 'Frontend Address Encryption Code:',
  'address_storage.select_input_method': 'Select address input method:',
  'address_storage.manual_input': 'Enter address manually',
  'address_storage.use_random': 'Generate randomly encrypted address onchain',
  'address_storage.input_title': 'Enter Ethereum address:',
  'address_storage.input_placeholder': '0x742d35cc6635c0532925a3b8d...',
  'address_storage.generate_example': 'Generate example address',
  'address_storage.random_mode_title': 'Random address mode',
  'address_storage.random_mode_desc': 'A random encrypted address will be generated in the smart contract',
  'address_storage.preparing': 'Preparing...',
  'address_storage.prepare_encrypt': 'Prepare address encryption',
  'address_storage.encrypt_success': 'Address encryption succeeded!',
  'address_storage.original_address': 'Original Address',
  'address_storage.eaddress_note': 'eaddress is a 160-bit encrypted address type, equivalent to euint160.',
  'address_storage.random_ready': 'Random address mode ready!',
  'address_storage.random_ready_desc': 'The contract will call FHE.randEaddress() to generate a random encrypted address',
  'address_storage.random_tip': 'Each call generates a brand-new random address',
  'address_storage.store_failed': 'Store failed:',
  'address_storage.store_success_desc': 'Your encrypted address has been securely stored on the blockchain!',
  'address_storage.eaddress_desc': '160-bit encrypted address type (euint160)',
  'address_storage.address_validation': 'Address validation',
  'address_storage.address_validation_desc': 'Ensure the input is a valid Ethereum address format',
  'address_storage.random_gen': 'Random generation',
  'address_storage.random_gen_desc': 'Use FHE.randEaddress() in the contract to generate a random address',
  'address_storage.privacy': 'Privacy',
  'address_storage.privacy_desc': 'Addresses are fully encrypted; only authorized users can decrypt',
  'address_storage.invalid_eth_address': 'Please enter a valid Ethereum address',
  'address_storage.encrypt_failed': 'Encryption failed:',
  'address_storage.need_prepare_first': 'Please prepare address data first',
  // Confidential Token
  'chapter.confidential_token': 'Confidential Token',
  'ctoken.section_title': 'Confidential Token (Encrypted Balance & Transfers)',
  'ctoken.intro_1': 'Transfer amounts and balances are encrypted. Observers cannot infer balances or movements.',
  'ctoken.intro_2': 'Use faucet to mint demo tokens, decrypt your balance, and perform encrypted transfers.',
  'ctoken.contract_addr': 'Token contract address',
  'ctoken.addr_hint': 'Leave empty to use configured address; or paste a deployed address.',
  'ctoken.call_faucet': 'Call Faucet (mint demo tokens)',
  'ctoken.view_decrypt_balance': 'View & Decrypt Balance',
  'ctoken.fetch_enc_balance': 'Fetch Encrypted Balance',
  'ctoken.enc_balance_handle': 'Encrypted Balance Handle',
  'ctoken.decrypt_balance': 'Decrypt Balance',
  'ctoken.transfer_title': 'Encrypted Transfer',
  'ctoken.to_addr': 'Recipient address',
  'ctoken.amount_human': 'Amount',
  'ctoken.human_decimals': 'e.g., 1.000000 (6 decimals)',
  'ctoken.transfer_btn': 'Transfer Encrypted Amount',
  'ctoken.decrypted_balance': 'Decrypted Balance',
  'ctoken.decrypted_balance_human': 'Decrypted Balance',
  'ctoken.sample_code': 'Quick sample code',
  'ctoken.contract_code': 'Confidential token contract code:',
  'ctoken.faucet_ok': 'Faucet transaction confirmed!',
  'ctoken.transfer_ok': 'Transfer submitted!',
  'ctoken.tx_failed': 'Transaction failed:',
  'ctoken.decrypt_failed': 'Decrypt balance failed:',
  'ctoken.fetch_enc_failed': 'Fetch encrypted balance failed:',
  'ctoken.no_enc_balance': 'No encrypted balance handle yet. Please fetch first.',
  'ctoken.sdk_required': 'SDK must be initialized to interact with confidential token',
  'ctoken.addr_not_set': 'Token address not set. Please deploy and update config or paste address.',
  'ctoken.need_to_and_amount': 'Please enter recipient and amount',
  // Address Decryption
  'address_decrypt.section_title': 'Step 5: Address Decryption',
  'address_decrypt.ensure_wallet_and_handle': 'Please connect your wallet and enter the ciphertext handle',
  'address_decrypt.decrypt_failed': 'Decryption failed:',
  'address_decrypt.no_address_warning': 'You have not stored an address in the contract. Please go to Step 4 to store an address first.',
  'address_decrypt.contract_read_code': 'Smart Contract Query Code:',
  'address_decrypt.frontend_decrypt_code': 'Frontend Address Decryption Code:',
  'address_decrypt.goal_1': 'Fetch encrypted address from the contract',
  'address_decrypt.goal_2': 'Decrypt eaddress data type',
  'address_decrypt.goal_3': 'Validate decrypted address format',
  'address_decrypt.step1_title': 'Step 1: Fetch your encrypted address',
  'address_decrypt.fetching': 'Fetching encrypted address from contract...',
  'address_decrypt.fetch_error': 'Failed to fetch address, please check network connection',
  'address_decrypt.fetch_button': 'Fetch my encrypted address from contract',
  'address_decrypt.fetch_button_done': '✅ Fetched my encrypted address from contract',
  'address_decrypt.step2_title': 'Step 2: Address ciphertext handle',
  'address_decrypt.handle_desc': 'This is the ciphertext handle of your encrypted address from the blockchain',
  'address_decrypt.step3_title': 'Step 3: Decrypt address',
  'address_decrypt.input_placeholder_handle': 'Enter address ciphertext handle (or click the button above to fetch)',
  'address_decrypt.decrypting': 'Decrypting...',
  'address_decrypt.decrypt_button': 'Decrypt Address',
  'address_decrypt.decrypt_success': 'Address decryption succeeded!',
  'address_decrypt.result_label': 'Decryption Result',
  'address_decrypt.valid_eth': 'Valid Ethereum address format',
  'address_decrypt.random_or_special': 'This may be a randomly generated or specially encoded address',
  'address_decrypt.congrats_text': 'Congrats! You have successfully decrypted the original address.',
  'address_decrypt.features_title': 'Address decryption features:',
  'address_decrypt.format_validation': 'Format validation',
  'address_decrypt.format_validation_desc': 'Validate whether the decrypted address is a valid Ethereum address',
  'address_decrypt.random_address': 'Random address',
  'address_decrypt.random_address_desc': 'Random addresses generated by the contract may not follow regular patterns',
  'address_decrypt.use_cases': 'Use cases:',
  'address_decrypt.case_1': 'Candidate addresses in anonymous voting systems',
  'address_decrypt.case_2': 'Recipient addresses for private transfers',
  'address_decrypt.case_3': 'Bidder addresses in private auctions',
  'address_decrypt.case_4': 'DeFi protocols protecting user privacy',
  // Onchain Decryption
  'onchain.section_title': 'Step 7: Onchain Decryption Request',
  'onchain.goal_1': 'Understand the requestDecryption mechanism',
  'onchain.goal_2': 'Learn the async decryption callback flow',
  'onchain.goal_3': 'Master best practices for onchain decryption',
  'onchain.contract_code': 'Onchain Decryption Contract Code:',
  'onchain.frontend_code': 'Frontend Decryption Request Code:',
  'onchain.step1_title': 'Step 1: Input and store encrypted number',
  'onchain.input_placeholder': 'Enter a number (e.g., 42)',
  'onchain.storing': 'Encrypting and storing...',
  'onchain.encrypt_and_store': 'Encrypt and Store Number',
  'onchain.step2_title': 'Step 2: Request onchain decryption',
  'onchain.requesting': 'Requesting...',
  'onchain.request_decrypt': 'Request Decryption',
  'onchain.reset_state': 'Reset State',
  'onchain.step3_title': 'Step 3: Decryption status monitor',
  'onchain.getting_status': 'Getting decryption status...',
  'onchain.get_status_failed': 'Failed to get status, please check network connection',
  'onchain.status_title': 'Decryption Status:',
  'onchain.status': 'Status',
  'onchain.status_pending': 'Decryption in progress...',
  'onchain.status_done': 'Decryption completed',
  'onchain.request_id': 'Request ID',
  'onchain.none': 'None',
  'onchain.decrypted_result': 'Decrypted Result',
  'onchain.waiting': 'Waiting for decryption...',
  'onchain.pending_hint_line1': 'Decryption is in progress and usually takes 1-3 minutes.',
  'onchain.pending_hint_line2': 'It is performed asynchronously by Zama\'s KMS and updates automatically.',
  'onchain.done_hint_prefix': 'Onchain decryption completed. Original number',
  'onchain.done_hint_middle': 'has been decrypted to',
  'onchain.tip_store_then_request': 'Please store an encrypted number first, then request decryption to view status.',
  'onchain.features_title': 'Onchain decryption features:',
  'onchain.async': 'Asynchronous processing',
  'onchain.async_desc': 'Decryption is handled asynchronously by the KMS network after the request is submitted',
  'onchain.security': 'Security verification',
  'onchain.security_desc': 'The result contains cryptographic proofs to ensure correctness',
  'onchain.state': 'State management',
  'onchain.state_desc': 'The contract maintains status to prevent duplicate requests',
  'onchain.events': 'Event notifications',
  'onchain.events_desc': 'Emits events upon completion for frontend listeners',
  'onchain.use_cases': 'Use cases:',
  'onchain.case_1': 'Reveal highest bid after auctions',
  'onchain.case_2': 'Publish voting results after voting ends',
  'onchain.case_3': 'Reveal randomness in games',
  'onchain.case_4': 'Conditional disclosure of privacy computation results',
  'onchain.caveats': 'Caveats:',
  'onchain.irreversible': 'Decryption is irreversible once disclosed',
  'onchain.gas': 'Decryption consumes gas',
  'onchain.congestion': 'Network congestion may increase time',
  'onchain.right_timing': 'Request decryption at the right time',
  'onchain.decrypt_prereq': 'Please ensure wallet is connected, SDK initialized, and a number is entered',
  'onchain.store_success': 'Encrypted number stored successfully!',
  'onchain.store_failed': 'Encrypt+store failed:',
  'onchain.request_submitted': 'Decryption request submitted. Please wait for onchain completion...',
  'onchain.request_failed': 'Request failed:',
  'onchain.reset_done': 'Decryption state has been reset',
  'onchain.reset_failed': 'Reset failed:',
  // FHE Calculations
  'fhe_calc.section_title': 'Step 6: FHE Calculations (Add/Sub/Mul/Div)',
  'fhe_calc.sdk_required_for_calc': 'SDK must be initialized before performing calculations',
  'fhe_calc.goal_1': 'Understand FHE homomorphic computation principles',
  'fhe_calc.goal_2': 'Learn operations on encrypted data',
  'fhe_calc.goal_3': 'Master usage of different operation types',
  'fhe_calc.contract_code': 'Smart Contract FHE Operation Code:',
  'fhe_calc.frontend_code': 'Frontend FHE Calculation Code:',
  'fhe_calc.step1_title': 'Step 1: Get your stored number',
  'fhe_calc.get_stored_number': 'Get stored number',
  'fhe_calc.current_stored': 'Current stored encrypted number',
  'fhe_calc.step2_title': 'Step 2: Select operation',
  'fhe_calc.step3_title': 'Step 3: Input operand',
  'fhe_calc.input_divisor_placeholder': 'Enter divisor (plaintext, not encrypted)',
  'fhe_calc.divide_note': 'Note: Division uses a plaintext divisor because FHE does not support ciphertext-by-ciphertext division.',
  'fhe_calc.input_operand_placeholder': 'Enter a number to operate on',
  'fhe_calc.encrypt_operand_note': 'This number will be encrypted and used in the operation with your stored number',
  'fhe_calc.processing': 'Processing...',
  'fhe_calc.execute': 'Execute',
  'fhe_calc.calc_done': 'Calculation completed!',
  'fhe_calc.op_type': 'Operation Type',
  'fhe_calc.operand': 'Operand',
  'fhe_calc.result_handle': 'Result Handle',
  'fhe_calc.decrypt_to_view': 'Decrypt to view result',
  'fhe_calc.decrypted_result': 'Decrypted Result',
  'fhe_calc.features_title': 'FHE Calculation Features:',
  'fhe_calc.homomorphic': 'Homomorphic operations',
  'fhe_calc.homomorphic_desc': 'Compute directly on encrypted data without decryption',
  'fhe_calc.privacy': 'Privacy',
  'fhe_calc.privacy_desc': 'Data remains encrypted throughout computation',
  'fhe_calc.result_encrypted': 'Encrypted results',
  'fhe_calc.result_encrypted_desc': 'Results are encrypted; users decrypt to view',
  'fhe_calc.acl': 'Access control',
  'fhe_calc.acl_desc': 'Only authorized users can decrypt results',
  'fhe_calc.limits_title': 'Operation limits',
  'fhe_calc.divide': 'Division',
  'fhe_calc.divide_desc': 'Divisor must be plaintext',
  'fhe_calc.mod': 'Remainder',
  'fhe_calc.mod_desc': 'Modulus must be plaintext',
  'fhe_calc.gas': 'Gas usage',
  'fhe_calc.gas_desc': 'FHE operations cost more gas than regular operations',
  'fhe_calc.precision': 'Precision',
  'fhe_calc.precision_desc': 'Integer operations only; floating point is not supported',
  'fhe_calc.fetch_failed': 'Failed to fetch stored number:',
  'fhe_calc.invalid_divisor': 'Please enter a valid divisor (integer > 0)',
  'fhe_calc.enter_operand': 'Please enter the operand',
  'fhe_calc.calc_failed': 'Calculation failed:',
  'fhe_calc.no_result_or_wallet': 'No result to decrypt or wallet not connected',
  'fhe_calc.decrypt_failed': 'Decryption failed:',
  'fhe_calc.op.add.label': 'Addition (+)',
  'fhe_calc.op.add.desc': 'Add your stored number to the new number',
  'fhe_calc.op.subtract.label': 'Subtraction (-)',
  'fhe_calc.op.subtract.desc': 'Subtract the new number from your stored number',
  'fhe_calc.op.multiply.label': 'Multiplication (×)',
  'fhe_calc.op.multiply.desc': 'Multiply your stored number by the new number',
  'fhe_calc.op.divide.label': 'Division (÷)',
  'fhe_calc.op.divide.desc': 'Divide your stored number by the specified number (plaintext divisor)',
  // Number Comparison
  'cmp.section_title': 'FHE Encrypted Number Comparison',
  'cmp.sdk_required_for_cmp': 'SDK must be initialized before performing comparison',
  'cmp.goal_1': 'Master comparison operations on encrypted data',
  'cmp.goal_2': 'Learn different comparison operators',
  'cmp.goal_3': 'Understand handling of encrypted booleans',
  'cmp.goal_4': 'Experience privacy-preserving condition checks',
  'cmp.contract_code': 'Smart Contract Comparison Code:',
  'cmp.frontend_code': 'Frontend Comparison Code:',
  'cmp.plan1_title': 'Plan A: Compare against a number',
  'cmp.plan1_desc': 'Compare your stored encrypted number with the input number',
  'cmp.no_number_tip': 'You have not stored a number. Please store a number first in the storage chapter.',
  'cmp.select_type': 'Select comparison type:',
  'cmp.input_number_label': 'Input number to compare:',
  'cmp.input_number_placeholder': 'Enter a number to compare',
  'cmp.comparing': 'Comparing...',
  'cmp.execute_compare': 'Execute comparison',
  'cmp.plan2_title': 'Plan B: Compare two users\' numbers',
  'cmp.plan2_desc': 'Compare the encrypted numbers stored by two different users',
  'cmp.user_a': 'User A Address:',
  'cmp.user_a_placeholder': 'Enter User A address',
  'cmp.user_b': 'User B Address:',
  'cmp.user_b_placeholder': 'Enter User B address',
  'cmp.use_my_address': 'Use my address',
  'cmp.select_type_simple': 'Comparison Type:',
  'cmp.equal_simple': 'Equal',
  'cmp.greater_simple': 'User A > User B',
  'cmp.less_simple': 'User A < User B',
  'cmp.compare_two_users': 'Compare two users',
  'cmp.view_result': 'View comparison result',
  'cmp.decrypt_tip': 'After comparison completes, click the button to decrypt and view the result',
  'cmp.decrypting': 'Decrypting...',
  'cmp.decrypt_result': 'Decrypt comparison result',
  'cmp.result_title': 'Comparison Result:',
  'cmp.true': 'TRUE ✓',
  'cmp.false': 'FALSE ✗',
  'cmp.condition_true': 'Condition satisfied',
  'cmp.condition_false': 'Condition not satisfied',
  'cmp.features_title': 'Encrypted comparison features:',
  'cmp.privacy': 'Privacy',
  'cmp.privacy_desc': 'Data remains encrypted during comparison',
  'cmp.result_encrypted': 'Encrypted result',
  'cmp.result_encrypted_desc': 'Boolean result is encrypted as well',
  'cmp.zk': 'Zero-knowledge',
  'cmp.zk_desc': 'Third parties cannot know values; only the result is revealed',
  'cmp.composability': 'Composability',
  'cmp.composability_desc': 'Use the result in more complex logic',
  'cmp.use_cases': 'Use cases',
  'cmp.case_1': 'Private auctions (compare bids)',
  'cmp.case_2': 'Secret voting (compare vote counts)',
  'cmp.case_3': 'Credit assessment (compare scores)',
  'cmp.case_4': 'Private ranking (compare user scores)',
  'cmp.ensure_wallet_and_value': 'Please connect your wallet and enter a comparison number',
  'cmp.no_stored_number': 'You have not stored a number in the contract. Please store one first.',
  'cmp.compare_success': 'Comparison submitted! Wait for confirmation to view the result.',
  'cmp.compare_failed': 'Comparison failed:',
  'cmp.enter_two_addresses': 'Please enter two user addresses',
  'cmp.users_compare_success': 'Users comparison submitted! Wait for confirmation.',
  'cmp.users_compare_failed': 'Users comparison failed:',
  'cmp.no_result_found': 'No comparison result found. Please perform a comparison first.',
  'cmp.decrypt_failed': 'Decrypt comparison result failed:',
  // Detailed comparison option labels/descriptions
  'cmp.equal.label': 'Equal (==)',
  'cmp.equal.desc': 'Check if stored number equals the input',
  'cmp.greater.label': 'Greater (>)',
  'cmp.greater.desc': 'Check if stored number is greater than the input',
  'cmp.less.label': 'Less (<)',
  'cmp.less.desc': 'Check if stored number is less than the input',
  'cmp.greater_or_equal.label': 'Greater or equal (>=)',
  'cmp.greater_or_equal.desc': 'Check if stored number is greater than or equal to the input',
  'cmp.less_or_equal.label': 'Less or equal (<=)',
  'cmp.less_or_equal.desc': 'Check if stored number is less than or equal to the input',
})

Object.assign(translations.zh, {
  'common.fetch_failed': '获取失败:',
  'common.connect_wallet': '请连接钱包',
  // Number Decryption
  'number_decrypt.section_title': '步骤3: 数字解密读取',
  'number_decrypt.ensure_wallet_and_handle': '请确保钱包已连接且输入了密文句柄',
  'number_decrypt.decrypt_failed': '解密失败:',
  'number_decrypt.no_number_warning': '您还没有在合约中存储数字，请先前往步骤2存储数字',
  'number_decrypt.contract_read_code': '智能合约读取代码:',
  'number_decrypt.frontend_decrypt_code': '前端解密代码:',
  'number_decrypt.goal_1': '从智能合约获取加密数据',
  'number_decrypt.goal_2': '学习用户解密过程',
  'number_decrypt.goal_3': '理解密钥对生成和签名',
  'number_decrypt.step1_title': '步骤1: 获取你的加密数字',
  'number_decrypt.fetching': '正在从合约获取数字数据...',
  'number_decrypt.fetch_error': '获取数字失败，请检查网络连接',
  'number_decrypt.fetch_button': '从合约获取我的加密数字',
  'number_decrypt.fetch_button_done': '✅ 从合约获取我的加密数字',
  'number_decrypt.step2_title': '步骤2: 密文句柄',
  'number_decrypt.handle_desc': '这是从区块链获取的加密数据句柄',
  'number_decrypt.step3_title': '步骤3: 解密数据',
  'number_decrypt.input_placeholder_handle': '输入密文句柄（或点击上面按钮获取）',
  'number_decrypt.decrypting': '解密中...',
  'number_decrypt.decrypt_button': '解密数字',
  'number_decrypt.decrypt_success': '解密成功！',
  'number_decrypt.result_label': '解密结果',
  'number_decrypt.congrats_text': '恭喜！你已成功解密出原始数字。',
  'number_decrypt.process_notes': '解密过程说明：',
  'number_decrypt.kp': '生成密钥对',
  'number_decrypt.kp_desc': '创建临时公私钥对用于解密',
  'number_decrypt.eip712': '创建EIP712签名',
  'number_decrypt.eip712_desc': '证明用户身份和权限',
  'number_decrypt.user_sig': '用户签名',
  'number_decrypt.user_sig_desc': '使用钱包对解密请求进行签名',
  'number_decrypt.exec_decrypt': '执行解密',
  'number_decrypt.exec_decrypt_desc': '通过Relayer服务解密数据',
  'number_decrypt.security_note': '安全提醒',
  'number_decrypt.security_note_desc': '只有拥有正确权限的用户才能解密数据。智能合约通过ACL管理解密权限。',
  // Address Storage
  'address_storage.section_title': '步骤4: 地址加密存储',
  'address_storage.goal_1': '学习如何加密以太坊地址',
  'address_storage.goal_2': '了解随机地址生成',
  'address_storage.goal_3': '掌握eaddress数据类型的使用',
  'address_storage.frontend_encrypt_code': '前端地址加密代码:',
  'address_storage.select_input_method': '选择地址输入方式：',
  'address_storage.manual_input': '手动输入地址',
  'address_storage.use_random': '链上随机生成加密地址',
  'address_storage.input_title': '输入以太坊地址：',
  'address_storage.input_placeholder': '0x742d35cc6635c0532925a3b8d...',
  'address_storage.generate_example': '生成示例地址',
  'address_storage.random_mode_title': '随机地址模式',
  'address_storage.random_mode_desc': '将在智能合约中生成一个随机的加密地址',
  'address_storage.preparing': '准备中...',
  'address_storage.prepare_encrypt': '准备加密地址',
  'address_storage.encrypt_success': '地址加密成功！',
  'address_storage.original_address': '原始地址',
  'address_storage.eaddress_note': 'eaddress是160位的加密地址类型，相当于euint160。',
  'address_storage.random_ready': '随机地址模式准备就绪！',
  'address_storage.random_ready_desc': '将在智能合约中调用FHE.randEaddress()生成随机加密地址',
  'address_storage.random_tip': '每次调用都会生成一个全新的随机地址',
  'address_storage.store_failed': '存储失败:',
  'address_storage.store_success_desc': '你的加密地址已安全存储在区块链上！',
  'address_storage.eaddress_desc': '160位加密地址类型，等同于euint160',
  'address_storage.address_validation': '地址验证',
  'address_storage.address_validation_desc': '确保输入的是有效的以太坊地址格式',
  'address_storage.random_gen': '随机生成',
  'address_storage.random_gen_desc': '使用FHE.randEaddress()在合约中生成随机地址',
  'address_storage.privacy': '隐私保护',
  'address_storage.privacy_desc': '地址信息完全加密，只有授权用户可以解密',
  'address_storage.invalid_eth_address': '请输入有效的以太坊地址',
  'address_storage.encrypt_failed': '加密失败:',
  'address_storage.need_prepare_first': '请先准备地址数据',
  // Confidential Token
  'chapter.confidential_token': '保密代币',
  'ctoken.section_title': '保密代币（余额与转账均加密）',
  'ctoken.intro_1': '转账金额与余额都是加密的，观察者无法推断余额或资金流动。',
  'ctoken.intro_2': '通过水龙头领取测试代币，解密查看余额，并进行加密转账。',
  'ctoken.contract_addr': '代币合约地址',
  'ctoken.addr_hint': '留空使用配置地址；或粘贴你部署的地址。',
  'ctoken.call_faucet': '调用水龙头（领取代币）',
  'ctoken.view_decrypt_balance': '查看并解密余额',
  'ctoken.fetch_enc_balance': '获取加密余额',
  'ctoken.enc_balance_handle': '加密余额句柄',
  'ctoken.decrypt_balance': '解密余额',
  'ctoken.transfer_title': '加密转账',
  'ctoken.to_addr': '接收方地址',
  'ctoken.amount_human': '转账数量',
  'ctoken.human_decimals': '例如：1.000000（6位小数）',
  'ctoken.transfer_btn': '执行加密转账',
  'ctoken.decrypted_balance': '解密后的余额',
  'ctoken.decrypted_balance_human': '解密后的余额',
  'ctoken.sample_code': '示例代码',
  'ctoken.contract_code': '保密代币合约示例代码：',
  'ctoken.faucet_ok': '水龙头交易已确认！',
  'ctoken.transfer_ok': '转账已提交！',
  'ctoken.tx_failed': '交易失败:',
  'ctoken.decrypt_failed': '余额解密失败:',
  'ctoken.fetch_enc_failed': '获取加密余额失败:',
  'ctoken.no_enc_balance': '还没有加密余额句柄，请先获取。',
  'ctoken.sdk_required': '需要先初始化 SDK 才能与保密代币交互',
  'ctoken.addr_not_set': '未设置代币地址。请部署后在配置中更新，或在此粘贴地址。',
  'ctoken.need_to_and_amount': '请输入接收地址和数量',
  // Address Decryption
  'address_decrypt.section_title': '步骤5: 地址解密读取',
  'address_decrypt.ensure_wallet_and_handle': '请确保钱包已连接且输入了密文句柄',
  'address_decrypt.decrypt_failed': '解密失败:',
  'address_decrypt.no_address_warning': '您还没有在合约中存储地址，请先前往步骤4存储地址',
  'address_decrypt.contract_read_code': '智能合约查询代码:',
  'address_decrypt.frontend_decrypt_code': '前端地址解密代码:',
  'address_decrypt.goal_1': '从智能合约获取加密地址',
  'address_decrypt.goal_2': '解密eaddress类型数据',
  'address_decrypt.goal_3': '验证解密后的地址格式',
  'address_decrypt.step1_title': '步骤1: 获取你的加密地址',
  'address_decrypt.fetching': '正在从合约获取地址数据...',
  'address_decrypt.fetch_error': '获取地址失败，请检查网络连接',
  'address_decrypt.fetch_button': '从合约获取我的加密地址',
  'address_decrypt.fetch_button_done': '✅ 从合约获取我的加密地址',
  'address_decrypt.step2_title': '步骤2: 地址密文句柄',
  'address_decrypt.handle_desc': '这是从区块链获取的加密地址句柄',
  'address_decrypt.step3_title': '步骤3: 解密地址',
  'address_decrypt.input_placeholder_handle': '输入地址密文句柄（或点击上面按钮获取）',
  'address_decrypt.decrypting': '解密中...',
  'address_decrypt.decrypt_button': '解密地址',
  'address_decrypt.decrypt_success': '地址解密成功！',
  'address_decrypt.result_label': '解密结果',
  'address_decrypt.valid_eth': '有效的以太坊地址格式',
  'address_decrypt.random_or_special': '这可能是随机生成的地址或特殊编码的地址',
  'address_decrypt.congrats_text': '恭喜！你已成功解密出原始地址。',
  'address_decrypt.features_title': '地址解密特点：',
  'address_decrypt.format_validation': '格式验证',
  'address_decrypt.format_validation_desc': '解密后验证是否为有效的以太坊地址',
  'address_decrypt.random_address': '随机地址',
  'address_decrypt.random_address_desc': '合约生成的随机地址可能不符合常规格式',
  'address_decrypt.use_cases': '应用场景：',
  'address_decrypt.case_1': '匿名投票系统中的候选人地址',
  'address_decrypt.case_2': '私密转账的收款地址',
  'address_decrypt.case_3': '隐私拍卖中的竞标者地址',
  'address_decrypt.case_4': '保护用户隐私的DeFi协议',
  // Onchain
  'onchain.section_title': '步骤7: 链上解密请求',
  'onchain.goal_1': '理解requestDecryption机制',
  'onchain.goal_2': '学习异步解密回调流程',
  'onchain.goal_3': '掌握链上解密的最佳实践',
  'onchain.contract_code': '链上解密合约代码:',
  'onchain.frontend_code': '前端解密请求代码:',
  'onchain.step1_title': '步骤1: 输入并存储加密数字',
  'onchain.input_placeholder': '输入一个数字（例如: 42）',
  'onchain.storing': '加密存储中...',
  'onchain.encrypt_and_store': '加密并存储数字',
  'onchain.step2_title': '步骤2: 请求链上解密',
  'onchain.requesting': '请求中...',
  'onchain.request_decrypt': '请求解密',
  'onchain.reset_state': '重置状态',
  'onchain.step3_title': '步骤3: 解密状态监控',
  'onchain.getting_status': '正在获取解密状态...',
  'onchain.get_status_failed': '获取状态失败，请检查网络连接',
  'onchain.status_title': '解密状态信息：',
  'onchain.status': '解密状态',
  'onchain.status_pending': '解密进行中...',
  'onchain.status_done': '解密完成',
  'onchain.request_id': '请求ID',
  'onchain.none': '无',
  'onchain.decrypted_result': '解密结果',
  'onchain.waiting': '等待解密...',
  'onchain.pending_hint_line1': '解密正在进行中，这个过程通常需要1-3分钟。',
  'onchain.pending_hint_line2': '解密由Zama的KMS网络异步完成，完成后会自动更新状态。',
  'onchain.done_hint_prefix': '链上解密完成。原始数字',
  'onchain.done_hint_middle': '已成功解密为',
  'onchain.tip_store_then_request': '请先存储一个加密数字，然后请求解密来查看状态。',
  'onchain.features_title': '链上解密特点：',
  'onchain.async': '异步处理',
  'onchain.async_desc': '解密请求提交后，由KMS网络异步处理',
  'onchain.security': '安全验证',
  'onchain.security_desc': '解密结果包含密码学证明，确保结果正确性',
  'onchain.state': '状态管理',
  'onchain.state_desc': '合约维护解密状态，防止重复请求',
  'onchain.events': '事件通知',
  'onchain.events_desc': '解密完成时发出事件，便于前端监听',
  'onchain.use_cases': '应用场景：',
  'onchain.case_1': '拍卖结束后公开最高出价',
  'onchain.case_2': '投票结束后公布投票结果',
  'onchain.case_3': '游戏中随机数的公开揭晓',
  'onchain.case_4': '隐私计算结果的条件性公开',
  'onchain.caveats': '注意事项：',
  'onchain.irreversible': '解密过程不可逆，一旦公开就无法撤回',
  'onchain.gas': '解密需要消耗一定的gas费用',
  'onchain.congestion': '网络拥堵时解密可能需要更长时间',
  'onchain.right_timing': '确保在适当的时机调用解密请求',
  'onchain.decrypt_prereq': '请确保钱包已连接、SDK已初始化并输入了数字',
  'onchain.store_success': '数字加密存储成功！',
  'onchain.store_failed': '加密存储失败:',
  'onchain.request_submitted': '解密请求已提交，请等待链上解密完成...',
  'onchain.request_failed': '请求解密失败:',
  'onchain.reset_done': '解密状态已重置',
  'onchain.reset_failed': '重置失败:',
  // FHE Calculations (selected keys referenced in UI)
  'fhe_calc.section_title': '步骤6: FHE计算功能（加减乘除）',
  'fhe_calc.sdk_required_for_calc': 'SDK必须初始化后才能进行计算操作',
  'fhe_calc.goal_1': '理解FHE同态计算原理',
  'fhe_calc.goal_2': '学习加密数据的运算操作',
  'fhe_calc.goal_3': '掌握不同运算类型的使用方法',
  'fhe_calc.contract_code': '智能合约FHE运算代码:',
  'fhe_calc.frontend_code': '前端FHE计算调用代码:',
  'fhe_calc.step1_title': '步骤1: 获取你存储的数字',
  'fhe_calc.get_stored_number': '获取存储的数字',
  'fhe_calc.current_stored': '当前存储加密数字',
  'fhe_calc.step2_title': '步骤2: 选择运算类型',
  'fhe_calc.step3_title': '步骤3: 输入操作数',
  'fhe_calc.input_divisor_placeholder': '输入除数（明文，不加密）',
  'fhe_calc.divide_note': '注意：除法运算中，除数必须是明文（不加密），因为FHE不支持密文除密文。',
  'fhe_calc.input_operand_placeholder': '输入要运算的数字',
  'fhe_calc.encrypt_operand_note': '这个数字将被加密后与你的存储数字进行运算',
  'fhe_calc.processing': '计算中...',
  'fhe_calc.execute': '执行',
  'fhe_calc.calc_done': '计算完成！',
  'fhe_calc.op_type': '运算类型',
  'fhe_calc.operand': '操作数',
  'fhe_calc.result_handle': '结果句柄',
  'fhe_calc.decrypt_to_view': '解密查看结果',
  'fhe_calc.decrypted_result': '解密结果',
  'fhe_calc.features_title': 'FHE计算特性：',
  'fhe_calc.homomorphic': '同态运算',
  'fhe_calc.homomorphic_desc': '直接在加密数据上进行计算，无需解密',
  'fhe_calc.privacy': '隐私保护',
  'fhe_calc.privacy_desc': '计算过程中数据始终保持加密状态',
  'fhe_calc.result_encrypted': '结果加密',
  'fhe_calc.result_encrypted_desc': '计算结果也是加密的，需要用户解密查看',
  'fhe_calc.acl': '权限控制',
  'fhe_calc.acl_desc': '只有授权用户可以解密计算结果',
  'fhe_calc.limits_title': '运算限制说明',
  'fhe_calc.divide': '除法运算',
  'fhe_calc.divide_desc': '除数必须是明文，不能是密文',
  'fhe_calc.mod': '取余运算',
  'fhe_calc.mod_desc': '与除法类似，模数必须是明文',
  'fhe_calc.gas': 'Gas消耗',
  'fhe_calc.gas_desc': 'FHE运算比普通运算消耗更多Gas',
  'fhe_calc.precision': '精度限制',
  'fhe_calc.precision_desc': '仅支持整数运算，不支持浮点数',
  'fhe_calc.fetch_failed': '获取存储数字失败:',
  'fhe_calc.invalid_divisor': '请输入有效的除数（大于0的整数）',
  'fhe_calc.enter_operand': '请输入要计算的数字',
  'fhe_calc.calc_failed': '计算失败:',
  'fhe_calc.no_result_or_wallet': '没有可解密的结果或钱包未连接',
  'fhe_calc.decrypt_failed': '解密失败:',
  'fhe_calc.op.add.label': '加法 (+)',
  'fhe_calc.op.add.desc': '将你的存储数字与新数字相加',
  'fhe_calc.op.subtract.label': '减法 (-)',
  'fhe_calc.op.subtract.desc': '从你的存储数字中减去新数字',
  'fhe_calc.op.multiply.label': '乘法 (×)',
  'fhe_calc.op.multiply.desc': '将你的存储数字与新数字相乘',
  'fhe_calc.op.divide.label': '除法 (÷)',
  'fhe_calc.op.divide.desc': '将你的存储数字除以指定数字（明文除数）',
  // Number Comparison (selected keys)
  'cmp.section_title': 'FHE加密数字比较',
  'cmp.sdk_required_for_cmp': 'SDK必须初始化后才能进行比较操作',
  'cmp.goal_1': '掌握加密数据的比较操作',
  'cmp.goal_2': '学习不同比较运算符的使用',
  'cmp.goal_3': '理解加密布尔值的处理',
  'cmp.goal_4': '体验保护隐私的条件判断',
  'cmp.contract_code': '智能合约比较代码:',
  'cmp.frontend_code': '前端比较代码:',
  'cmp.plan1_title': '方案一：与指定数字比较',
  'cmp.plan1_desc': '将你存储的加密数字与输入的数字进行比较',
  'cmp.no_number_tip': '您还没有存储数字，请先前往数字存储章节存储一个数字',
  'cmp.select_type': '选择比较类型：',
  'cmp.input_number_label': '输入比较数字：',
  'cmp.input_number_placeholder': '请输入要比较的数字',
  'cmp.comparing': '比较中...',
  'cmp.execute_compare': '执行比较',
  'cmp.plan2_title': '方案二：比较两个用户的数字',
  'cmp.plan2_desc': '比较两个不同用户存储的加密数字大小',
  'cmp.user_a': '用户A地址：',
  'cmp.user_a_placeholder': '输入用户A的地址',
  'cmp.user_b': '用户B地址：',
  'cmp.user_b_placeholder': '输入用户B的地址',
  'cmp.use_my_address': '使用我的地址',
  'cmp.select_type_simple': '比较类型：',
  'cmp.equal_simple': '相等',
  'cmp.greater_simple': '用户A 大于 用户B',
  'cmp.less_simple': '用户A 小于 用户B',
  'cmp.compare_two_users': '比较两个用户',
  'cmp.view_result': '查看比较结果',
  'cmp.decrypt_tip': '比较操作完成后，点击按钮解密查看结果',
  'cmp.decrypting': '解密中...',
  'cmp.decrypt_result': '解密比较结果',
  'cmp.result_title': '比较结果：',
  'cmp.true': 'TRUE ✓',
  'cmp.false': 'FALSE ✗',
  'cmp.condition_true': '条件成立',
  'cmp.condition_false': '条件不成立',
  'cmp.features_title': '加密比较的特点：',
  'cmp.privacy': '隐私保护',
  'cmp.privacy_desc': '比较过程中数据始终保持加密状态',
  'cmp.result_encrypted': '结果加密',
  'cmp.result_encrypted_desc': '比较结果（布尔值）也是加密的',
  'cmp.zk': '零知识',
  'cmp.zk_desc': '第三方无法知道具体的数值，只能知道比较结果',
  'cmp.composability': '可组合性',
  'cmp.composability_desc': '可以基于比较结果进行更复杂的逻辑运算',
  'cmp.use_cases': '应用场景',
  'cmp.case_1': '隐私拍卖（比较出价高低）',
  'cmp.case_2': '保密投票（比较选票数量）',
  'cmp.case_3': '信用评估（比较信用分数）',
  'cmp.case_4': '隐私排名（比较用户得分）',
  'cmp.ensure_wallet_and_value': '请确保钱包已连接且输入了比较数字',
  'cmp.no_stored_number': '您还没有在合约中存储数字，请先存储一个数字',
  'cmp.compare_success': '比较操作成功！等待交易确认后可以查看结果。',
  'cmp.compare_failed': '比较失败:',
  'cmp.enter_two_addresses': '请输入两个用户地址',
  'cmp.users_compare_success': '用户比较操作成功！等待交易确认后可以查看结果。',
  'cmp.users_compare_failed': '用户比较失败:',
  'cmp.no_result_found': '没有找到比较结果，请先进行比较操作',
  'cmp.decrypt_failed': '解密比较结果失败:',
  // 比较类型详细文案
  'cmp.equal.label': '等于 (==)',
  'cmp.equal.desc': '检查存储数字是否等于输入数字',
  'cmp.greater.label': '大于 (>)',
  'cmp.greater.desc': '检查存储数字是否大于输入数字',
  'cmp.less.label': '小于 (<)',
  'cmp.less.desc': '检查存储数字是否小于输入数字',
  'cmp.greater_or_equal.label': '大于等于 (>=)',
  'cmp.greater_or_equal.desc': '检查存储数字是否大于等于输入数字',
  'cmp.less_or_equal.label': '小于等于 (<=)',
  'cmp.less_or_equal.desc': '检查存储数字是否小于等于输入数字',
})

Object.assign(translations.fr, {
  'common.fetch_failed': 'Échec de la récupération :',
  'common.connect_wallet': 'Veuillez connecter votre portefeuille',
  // Number Decryption
  'number_decrypt.section_title': 'Étape 3 : Déchiffrement de nombres',
  'number_decrypt.ensure_wallet_and_handle': 'Veuillez connecter votre portefeuille et saisir la poignée de chiffrement',
  'number_decrypt.decrypt_failed': 'Échec du déchiffrement :',
  'number_decrypt.no_number_warning': 'Vous n\'avez pas encore stocké de nombre dans le contrat. Veuillez d\'abord aller à l\'étape 2 pour stocker un nombre.',
  'number_decrypt.contract_read_code': 'Code de lecture du contrat :',
  'number_decrypt.frontend_decrypt_code': 'Code de déchiffrement frontend :',
  'number_decrypt.goal_1': 'Récupérer les données chiffrées depuis le contrat',
  'number_decrypt.goal_2': 'Apprendre le processus de déchiffrement utilisateur',
  'number_decrypt.goal_3': 'Comprendre la génération de paires de clés et les signatures',
  'number_decrypt.step1_title': 'Étape 1 : Récupérer votre nombre chiffré',
  'number_decrypt.fetching': 'Récupération du nombre chiffré depuis le contrat...',
  'number_decrypt.fetch_error': 'Échec de la récupération du nombre, veuillez vérifier la connexion réseau',
  'number_decrypt.fetch_button': 'Récupérer mon nombre chiffré depuis le contrat',
  'number_decrypt.fetch_button_done': '✅ Nombre chiffré récupéré depuis le contrat',
  'number_decrypt.step2_title': 'Étape 2 : Poignée de chiffrement',
  'number_decrypt.handle_desc': 'Ceci est la poignée de chiffrement récupérée depuis la blockchain',
  'number_decrypt.step3_title': 'Étape 3 : Déchiffrer les données',
  'number_decrypt.input_placeholder_handle': 'Saisir la poignée (ou cliquez sur le bouton ci-dessus pour récupérer)',
  'number_decrypt.decrypting': 'Déchiffrement...',
  'number_decrypt.decrypt_button': 'Déchiffrer le nombre',
  'number_decrypt.decrypt_success': 'Déchiffrement réussi !',
  'number_decrypt.result_label': 'Résultat du déchiffrement',
  'number_decrypt.congrats_text': 'Félicitations ! Vous avez déchiffré le nombre d\'origine.',
  'number_decrypt.process_notes': 'Notes sur le processus de déchiffrement :',
  'number_decrypt.kp': 'Génération de paire de clés',
  'number_decrypt.kp_desc': 'Créer une paire de clés temporaire pour le déchiffrement',
  'number_decrypt.eip712': 'Signature EIP712',
  'number_decrypt.eip712_desc': 'Prouver l\'identité et l\'autorisation de l\'utilisateur',
  'number_decrypt.user_sig': 'Signature utilisateur',
  'number_decrypt.user_sig_desc': 'Utiliser le portefeuille pour signer la demande de déchiffrement',
  'number_decrypt.exec_decrypt': 'Exécuter le déchiffrement',
  'number_decrypt.exec_decrypt_desc': 'Déchiffrer via le service de relais',
  'number_decrypt.security_note': 'Rappel de sécurité',
  'number_decrypt.security_note_desc': 'Seuls les utilisateurs avec les bonnes autorisations peuvent déchiffrer. Le contrat gère les permissions via ACL.',
  // Address Storage (selected)
  'address_storage.section_title': 'Étape 4 : Stockage d\'adresses chiffrées',
  'address_storage.goal_1': 'Apprendre à chiffrer des adresses Ethereum',
  'address_storage.goal_2': 'Comprendre la génération d\'adresses aléatoires',
  'address_storage.goal_3': 'Utiliser le type de données eaddress',
  'address_storage.frontend_encrypt_code': 'Code de chiffrement d\'adresse côté frontend :',
  'address_storage.select_input_method': 'Choisir la méthode de saisie d\'adresse :',
  'address_storage.manual_input': 'Saisir l\'adresse manuellement',
  'address_storage.use_random': 'Generate randomly encrypted address onchain',
  'address_storage.input_title': 'Saisir l\'adresse Ethereum :',
  'address_storage.input_placeholder': '0x742d35cc6635c0532925a3b8d...',
  'address_storage.generate_example': 'Générer une adresse d\'exemple',
  'address_storage.random_mode_title': 'Mode adresse aléatoire',
  'address_storage.random_mode_desc': 'Une adresse chiffrée aléatoire sera générée dans le contrat intelligent',
  'address_storage.preparing': 'Préparation...',
  'address_storage.prepare_encrypt': 'Préparer le chiffrement de l\'adresse',
  'address_storage.encrypt_success': 'Adresse chiffrée avec succès !',
  'address_storage.original_address': 'Adresse d\'origine',
  'address_storage.eaddress_note': 'eaddress est un type d\'adresse chiffrée 160 bits, équivalent à euint160.',
  'address_storage.random_ready': 'Mode adresse aléatoire prêt !',
  'address_storage.random_ready_desc': 'Le contrat appellera FHE.randEaddress() pour générer une adresse chiffrée aléatoire',
  'address_storage.random_tip': 'Chaque appel génère une toute nouvelle adresse aléatoire',
  'address_storage.store_failed': 'Échec de l\'enregistrement :',
  'address_storage.store_success_desc': 'Votre adresse chiffrée a été stockée en toute sécurité sur la blockchain !',
  'address_storage.eaddress_desc': 'Type d\'adresse chiffrée 160 bits (euint160)',
  'address_storage.address_validation': 'Validation d\'adresse',
  'address_storage.address_validation_desc': 'S\'assurer que l\'entrée est une adresse Ethereum valide',
  'address_storage.random_gen': 'Génération aléatoire',
  'address_storage.random_gen_desc': 'Utiliser FHE.randEaddress() dans le contrat pour générer une adresse aléatoire',
  'address_storage.privacy': 'Confidentialité',
  'address_storage.privacy_desc': 'Les adresses sont entièrement chiffrées ; seuls les utilisateurs autorisés peuvent déchiffrer',
  'address_storage.invalid_eth_address': 'Veuillez saisir une adresse Ethereum valide',
  'address_storage.encrypt_failed': 'Échec du chiffrement :',
  'address_storage.need_prepare_first': 'Veuillez d\'abord préparer les données d\'adresse',
  // Confidential Token
  'chapter.confidential_token': 'Jeton confidentiel',
  'ctoken.section_title': 'Jeton confidentiel (soldes et transferts chiffrés)',
  'ctoken.intro_1': 'Les montants de transfert et les soldes sont chiffrés. Les observateurs ne peuvent pas en déduire les mouvements.',
  'ctoken.intro_2': 'Utilisez le faucet pour obtenir des jetons, déchiffrer votre solde et effectuer des transferts chiffrés.',
  'ctoken.contract_addr': 'Adresse du contrat de jeton',
  'ctoken.addr_hint': 'Laissez vide pour utiliser l’adresse configurée ; ou collez votre adresse déployée.',
  'ctoken.call_faucet': 'Appeler le faucet (obtenir des jetons)',
  'ctoken.view_decrypt_balance': 'Voir et déchiffrer le solde',
  'ctoken.fetch_enc_balance': 'Récupérer le solde chiffré',
  'ctoken.enc_balance_handle': 'Poignée de solde chiffré',
  'ctoken.decrypt_balance': 'Déchiffrer le solde',
  'ctoken.transfer_title': 'Transfert chiffré',
  'ctoken.to_addr': 'Adresse du destinataire',
  'ctoken.amount_human': 'Montant',
  'ctoken.human_decimals': 'ex. 1.000000 (6 décimales)',
  'ctoken.transfer_btn': 'Transférer le montant chiffré',
  'ctoken.decrypted_balance': 'Solde déchiffré',
  'ctoken.decrypted_balance_human': 'Solde déchiffré',
  'ctoken.sample_code': 'Exemple rapide',
  'ctoken.contract_code': 'Code du contrat de jeton confidentiel :',
  'ctoken.faucet_ok': 'Transaction faucet confirmée !',
  'ctoken.transfer_ok': 'Transfert soumis !',
  'ctoken.tx_failed': 'Échec de la transaction :',
  'ctoken.decrypt_failed': 'Échec du déchiffrement du solde :',
  'ctoken.fetch_enc_failed': 'Échec de la récupération du solde chiffré :',
  'ctoken.no_enc_balance': 'Aucune poignée de solde chiffré. Veuillez d\'abord récupérer.',
  'ctoken.sdk_required': 'Le SDK doit être initialisé pour interagir avec le jeton confidentiel',
  'ctoken.addr_not_set': 'Adresse du jeton non définie. Déployez et mettez à jour la configuration ou collez l’adresse ici.',
  'ctoken.need_to_and_amount': 'Veuillez saisir le destinataire et le montant',
  // Address Decryption (selected)
  'address_decrypt.section_title': 'Étape 5 : Déchiffrement d\'adresses',
  'address_decrypt.ensure_wallet_and_handle': 'Veuillez connecter votre portefeuille et saisir la poignée de chiffrement',
  'address_decrypt.decrypt_failed': 'Échec du déchiffrement :',
  'address_decrypt.no_address_warning': 'Vous n\'avez pas encore stocké d\'adresse dans le contrat. Veuillez d\'abord aller à l\'étape 4.',
  'address_decrypt.contract_read_code': 'Code de requête du contrat :',
  'address_decrypt.frontend_decrypt_code': 'Code de déchiffrement d\'adresse côté frontend :',
  'address_decrypt.goal_1': 'Récupérer l\'adresse chiffrée depuis le contrat',
  'address_decrypt.goal_2': 'Déchiffrer le type de données eaddress',
  'address_decrypt.goal_3': 'Valider le format de l\'adresse déchiffrée',
  'address_decrypt.step1_title': 'Étape 1 : Récupérer votre adresse chiffrée',
  'address_decrypt.fetching': 'Récupération de l\'adresse chiffrée depuis le contrat...',
  'address_decrypt.fetch_error': 'Échec de la récupération de l\'adresse, veuillez vérifier la connexion réseau',
  'address_decrypt.fetch_button': 'Récupérer mon adresse chiffrée depuis le contrat',
  'address_decrypt.fetch_button_done': '✅ Adresse chiffrée récupérée depuis le contrat',
  'address_decrypt.step2_title': 'Étape 2 : Poignée de chiffrement d\'adresse',
  'address_decrypt.handle_desc': 'Il s\'agit de la poignée chiffrée de votre adresse sur la blockchain',
  'address_decrypt.step3_title': 'Étape 3 : Déchiffrer l\'adresse',
  'address_decrypt.input_placeholder_handle': 'Saisir la poignée d\'adresse (ou cliquez sur le bouton ci-dessus)',
  'address_decrypt.decrypting': 'Déchiffrement...',
  'address_decrypt.decrypt_button': 'Déchiffrer l\'adresse',
  'address_decrypt.decrypt_success': 'Adresse déchiffrée avec succès !',
  'address_decrypt.result_label': 'Résultat du déchiffrement',
  'address_decrypt.valid_eth': 'Format d\'adresse Ethereum valide',
  'address_decrypt.random_or_special': 'Il peut s\'agir d\'une adresse aléatoire ou spécialement encodée',
  'address_decrypt.congrats_text': 'Félicitations ! Vous avez déchiffré l\'adresse d\'origine.',
  'address_decrypt.features_title': 'Caractéristiques du déchiffrement d\'adresse :',
  'address_decrypt.format_validation': 'Validation du format',
  'address_decrypt.format_validation_desc': 'Vérifier si l\'adresse déchiffrée est une adresse Ethereum valide',
  'address_decrypt.random_address': 'Adresse aléatoire',
  'address_decrypt.random_address_desc': 'Les adresses aléatoires générées par le contrat peuvent ne pas suivre les modèles habituels',
  'address_decrypt.use_cases': 'Cas d\'utilisation :',
  'address_decrypt.case_1': 'Adresses des candidats dans un système de vote anonyme',
  'address_decrypt.case_2': 'Adresses de réception pour les transferts privés',
  'address_decrypt.case_3': 'Adresses des enchérisseurs dans les enchères privées',
  'address_decrypt.case_4': 'Protocoles DeFi protégeant la vie privée des utilisateurs',
  // Onchain (selected)
  'onchain.section_title': 'Étape 7 : Demande de déchiffrement on-chain',
  'onchain.goal_1': 'Comprendre le mécanisme requestDecryption',
  'onchain.goal_2': 'Apprendre le flux de rappel de déchiffrement asynchrone',
  'onchain.goal_3': 'Maîtriser les bonnes pratiques du déchiffrement on-chain',
  'onchain.contract_code': 'Code du contrat de déchiffrement on-chain :',
  'onchain.frontend_code': 'Code de demande de déchiffrement côté frontend :',
  'onchain.step1_title': 'Étape 1 : Saisir et stocker un nombre chiffré',
  'onchain.input_placeholder': 'Saisir un nombre (ex. : 42)',
  'onchain.storing': 'Chiffrement et stockage...',
  'onchain.encrypt_and_store': 'Chiffrer et stocker le nombre',
  'onchain.step2_title': 'Étape 2 : Demander le déchiffrement on-chain',
  'onchain.requesting': 'Demande en cours...',
  'onchain.request_decrypt': 'Demander le déchiffrement',
  'onchain.reset_state': 'Réinitialiser l\'état',
  'onchain.step3_title': 'Étape 3 : Suivi de l\'état du déchiffrement',
  'onchain.getting_status': 'Récupération de l\'état du déchiffrement...',
  'onchain.get_status_failed': 'Échec de la récupération de l\'état, veuillez vérifier la connexion réseau',
  'onchain.status_title': 'État du déchiffrement :',
  'onchain.status': 'Statut',
  'onchain.status_pending': 'Déchiffrement en cours...',
  'onchain.status_done': 'Déchiffrement terminé',
  'onchain.request_id': 'ID de requête',
  'onchain.none': 'Aucun',
  'onchain.decrypted_result': 'Résultat déchiffré',
  'onchain.waiting': 'En attente de déchiffrement...',
  'onchain.pending_hint_line1': 'Le déchiffrement est en cours et prend généralement 1 à 3 minutes.',
  'onchain.pending_hint_line2': 'Il est effectué de manière asynchrone par le KMS de Zama et se met à jour automatiquement.',
  'onchain.done_hint_prefix': 'Déchiffrement on-chain terminé. Le nombre d\'origine',
  'onchain.done_hint_middle': 'a été déchiffré en',
  'onchain.tip_store_then_request': 'Veuillez d\'abord stocker un nombre chiffré, puis demander le déchiffrement pour voir l\'état.',
  'onchain.features_title': 'Caractéristiques du déchiffrement on-chain :',
  'onchain.async': 'Traitement asynchrone',
  'onchain.async_desc': 'Le déchiffrement est géré de manière asynchrone par le réseau KMS après la demande',
  'onchain.security': 'Vérification de sécurité',
  'onchain.security_desc': 'Le résultat contient des preuves cryptographiques garantissant l\'exactitude',
  'onchain.state': 'Gestion d\'état',
  'onchain.state_desc': 'Le contrat maintient l\'état pour éviter les demandes en double',
  'onchain.events': 'Notifications d\'événement',
  'onchain.events_desc': 'Émet des événements à l\'achèvement pour l\'écoute côté frontend',
  'onchain.use_cases': 'Cas d\'utilisation :',
  'onchain.case_1': 'Divulguer l\'enchère la plus élevée après une vente aux enchères',
  'onchain.case_2': 'Publier les résultats du vote après la fin du vote',
  'onchain.case_3': 'Révéler l\'aléatoire dans les jeux',
  'onchain.case_4': 'Divulgation conditionnelle des résultats de calcul privés',
  'onchain.caveats': 'Mises en garde :',
  'onchain.irreversible': 'Le déchiffrement est irréversible une fois divulgué',
  'onchain.gas': 'Le déchiffrement consomme du gas',
  'onchain.congestion': 'La congestion du réseau peut augmenter le temps',
  'onchain.right_timing': 'Demander le déchiffrement au bon moment',
  'onchain.decrypt_prereq': 'Veuillez vous assurer que le portefeuille est connecté, le SDK initialisé, et qu\'un nombre est saisi',
  'onchain.store_success': 'Nombre chiffré stocké avec succès !',
  'onchain.store_failed': 'Échec du chiffrement+stockage :',
  'onchain.request_submitted': 'Demande de déchiffrement soumise. Veuillez patienter pour l\'achèvement on-chain...',
  'onchain.request_failed': 'Échec de la demande :',
  'onchain.reset_done': 'L\'état de déchiffrement a été réinitialisé',
  'onchain.reset_failed': 'Échec de la réinitialisation :',
  // FHE Calculations (selected)
  'fhe_calc.section_title': 'Étape 6 : Calculs FHE (Addition/Soustraction/Multiplication/Division)',
  'fhe_calc.sdk_required_for_calc': 'Le SDK doit être initialisé avant d\'effectuer des calculs',
  'fhe_calc.goal_1': 'Comprendre les principes du calcul homomorphe FHE',
  'fhe_calc.goal_2': 'Apprendre les opérations sur les données chiffrées',
  'fhe_calc.goal_3': 'Maîtriser l\'utilisation des différents types d\'opérations',
  'fhe_calc.contract_code': 'Code des opérations FHE du contrat :',
  'fhe_calc.frontend_code': 'Code frontend pour les calculs FHE :',
  'fhe_calc.step1_title': 'Étape 1 : Récupérer votre nombre stocké',
  'fhe_calc.get_stored_number': 'Récupérer le nombre stocké',
  'fhe_calc.current_stored': 'Encrypted Nombre stocké actuel',
  'fhe_calc.step2_title': 'Étape 2 : Choisir l\'opération',
  'fhe_calc.step3_title': 'Étape 3 : Saisir l\'opérande',
  'fhe_calc.input_divisor_placeholder': 'Saisir le diviseur (en clair, non chiffré)',
  'fhe_calc.divide_note': 'Remarque : La division utilise un diviseur en clair car FHE ne prend pas en charge la division chiffré/chiffré.',
  'fhe_calc.input_operand_placeholder': 'Saisir le nombre à utiliser',
  'fhe_calc.encrypt_operand_note': 'Ce nombre sera chiffré puis utilisé avec votre nombre stocké',
  'fhe_calc.processing': 'Calcul en cours...',
  'fhe_calc.execute': 'Exécuter',
  'fhe_calc.calc_done': 'Calcul terminé !',
  'fhe_calc.op_type': 'Type d\'opération',
  'fhe_calc.operand': 'Opérande',
  'fhe_calc.result_handle': 'Poignée du résultat',
  'fhe_calc.decrypt_to_view': 'Déchiffrer pour voir le résultat',
  'fhe_calc.decrypted_result': 'Résultat déchiffré',
  'fhe_calc.features_title': 'Caractéristiques des calculs FHE :',
  'fhe_calc.homomorphic': 'Opérations homomorphes',
  'fhe_calc.homomorphic_desc': 'Calculer directement sur des données chiffrées sans déchiffrement',
  'fhe_calc.privacy': 'Confidentialité',
  'fhe_calc.privacy_desc': 'Les données restent chiffrées pendant le calcul',
  'fhe_calc.result_encrypted': 'Résultat chiffré',
  'fhe_calc.result_encrypted_desc': 'Les résultats sont chiffrés ; l\'utilisateur déchiffre pour voir',
  'fhe_calc.acl': 'Contrôle d\'accès',
  'fhe_calc.acl_desc': 'Seuls les utilisateurs autorisés peuvent déchiffrer les résultats',
  'fhe_calc.limits_title': 'Limites des opérations',
  'fhe_calc.divide': 'Division',
  'fhe_calc.divide_desc': 'Le diviseur doit être en clair',
  'fhe_calc.mod': 'Modulo',
  'fhe_calc.mod_desc': 'Le modulo doit être en clair',
  'fhe_calc.gas': 'Consommation de gas',
  'fhe_calc.gas_desc': 'Les calculs FHE consomment plus de gas que les opérations normales',
  'fhe_calc.precision': 'Précision',
  'fhe_calc.precision_desc': 'Opérations entières uniquement ; pas de flottants',
  'fhe_calc.fetch_failed': 'Échec de la récupération du nombre stocké :',
  'fhe_calc.invalid_divisor': 'Veuillez saisir un diviseur valide (entier > 0)',
  'fhe_calc.enter_operand': 'Veuillez saisir l\'opérande',
  'fhe_calc.calc_failed': 'Échec du calcul :',
  'fhe_calc.no_result_or_wallet': 'Aucun résultat à déchiffrer ou portefeuille non connecté',
  'fhe_calc.decrypt_failed': 'Échec du déchiffrement :',
  'fhe_calc.op.add.label': 'Addition (+)',
  'fhe_calc.op.add.desc': 'Ajouter votre nombre stocké au nouveau nombre',
  'fhe_calc.op.subtract.label': 'Soustraction (-)',
  'fhe_calc.op.subtract.desc': 'Soustraire le nouveau nombre de votre nombre stocké',
  'fhe_calc.op.multiply.label': 'Multiplication (×)',
  'fhe_calc.op.multiply.desc': 'Multiplier votre nombre stocké par le nouveau nombre',
  'fhe_calc.op.divide.label': 'Division (÷)',
  'fhe_calc.op.divide.desc': 'Diviser votre nombre stocké par le nombre spécifié (diviseur en clair)',
  // Number Comparison (selected)
  'cmp.section_title': 'Comparaison de nombres chiffrés FHE',
  'cmp.sdk_required_for_cmp': 'Le SDK doit être initialisé avant d\'effectuer une comparaison',
  'cmp.goal_1': 'Maîtriser les opérations de comparaison sur des données chiffrées',
  'cmp.goal_2': 'Apprendre différents opérateurs de comparaison',
  'cmp.goal_3': 'Comprendre le traitement des booléens chiffrés',
  'cmp.goal_4': 'Expérimenter des conditions préservant la confidentialité',
  'cmp.contract_code': 'Code de comparaison du contrat :',
  'cmp.frontend_code': 'Code frontend de comparaison :',
  'cmp.plan1_title': 'Plan A : Comparer avec un nombre',
  'cmp.plan1_desc': 'Comparer votre nombre chiffré stocké avec le nombre saisi',
  'cmp.no_number_tip': 'Vous n\'avez pas de nombre stocké. Veuillez d\'abord en stocker un.',
  'cmp.select_type': 'Choisir le type de comparaison :',
  'cmp.input_number_label': 'Saisir le nombre à comparer :',
  'cmp.input_number_placeholder': 'Saisir un nombre à comparer',
  'cmp.comparing': 'Comparaison en cours...',
  'cmp.execute_compare': 'Exécuter la comparaison',
  'cmp.plan2_title': 'Plan B : Comparer les nombres de deux utilisateurs',
  'cmp.plan2_desc': 'Comparer les nombres chiffrés stockés par deux utilisateurs',
  'cmp.user_a': 'Adresse de l\'utilisateur A :',
  'cmp.user_a_placeholder': 'Saisir l\'adresse de l\'utilisateur A',
  'cmp.user_b': 'Adresse de l\'utilisateur B :',
  'cmp.user_b_placeholder': 'Saisir l\'adresse de l\'utilisateur B',
  'cmp.use_my_address': 'Utiliser mon adresse',
  'cmp.select_type_simple': 'Type de comparaison :',
  'cmp.equal_simple': 'Égal',
  'cmp.greater_simple': 'Utilisateur A > Utilisateur B',
  'cmp.less_simple': 'Utilisateur A < Utilisateur B',
  'cmp.compare_two_users': 'Comparer deux utilisateurs',
  'cmp.view_result': 'Voir le résultat de la comparaison',
  'cmp.decrypt_tip': 'Après la comparaison, cliquez pour déchiffrer et voir le résultat',
  'cmp.decrypting': 'Déchiffrement...',
  'cmp.decrypt_result': 'Déchiffrer le résultat de la comparaison',
  'cmp.result_title': 'Résultat de la comparaison :',
  'cmp.true': 'TRUE ✓',
  'cmp.false': 'FALSE ✗',
  'cmp.condition_true': 'Condition satisfaite',
  'cmp.condition_false': 'Condition non satisfaite',
  'cmp.features_title': 'Caractéristiques de la comparaison chiffrée :',
  'cmp.privacy': 'Confidentialité',
  'cmp.privacy_desc': 'Les données restent chiffrées pendant la comparaison',
  'cmp.result_encrypted': 'Résultat chiffré',
  'cmp.result_encrypted_desc': 'Le résultat booléen est également chiffré',
  'cmp.zk': 'Zero-knowledge',
  'cmp.zk_desc': 'Les tiers ne connaissent pas les valeurs, seulement le résultat',
  'cmp.composability': 'Composabilité',
  'cmp.composability_desc': 'Utiliser le résultat dans des logiques plus complexes',
  'cmp.use_cases': 'Cas d\'utilisation',
  'cmp.case_1': 'Enchères privées (comparer les offres)',
  'cmp.case_2': 'Vote secret (comparer le nombre de votes)',
  'cmp.case_3': 'Évaluation de crédit (comparer les scores)',
  'cmp.case_4': 'Classement privé (comparer les scores des utilisateurs)',
  'cmp.ensure_wallet_and_value': 'Veuillez connecter le portefeuille et saisir le nombre à comparer',
  'cmp.no_stored_number': 'Vous n\'avez pas de nombre stocké dans le contrat. Veuillez d\'abord en stocker un.',
  'cmp.compare_success': 'Comparaison soumise ! Attendez la confirmation pour voir le résultat.',
  'cmp.compare_failed': 'Échec de la comparaison :',
  'cmp.enter_two_addresses': 'Veuillez saisir deux adresses d\'utilisateurs',
  'cmp.users_compare_success': 'Comparaison entre utilisateurs soumise ! Attendez la confirmation.',
  'cmp.users_compare_failed': 'Échec de la comparaison entre utilisateurs :',
  'cmp.no_result_found': 'Aucun résultat trouvé. Veuillez d\'abord effectuer une comparaison',
  'cmp.decrypt_failed': 'Échec du déchiffrement du résultat :',
  // Libellés/descriptions détaillés des options de comparaison
  'cmp.equal.label': 'Égal (==)',
  'cmp.equal.desc': "Vérifier si le nombre stocké est égal à l'entrée",
  'cmp.greater.label': 'Supérieur (>)',
  'cmp.greater.desc': "Vérifier si le nombre stocké est supérieur à l'entrée",
  'cmp.less.label': 'Inférieur (<)',
  'cmp.less.desc': "Vérifier si le nombre stocké est inférieur à l'entrée",
  'cmp.greater_or_equal.label': 'Supérieur ou égal (>=)',
  'cmp.greater_or_equal.desc': "Vérifier si le nombre stocké est supérieur ou égal à l'entrée",
  'cmp.less_or_equal.label': 'Inférieur ou égal (<=)',
  'cmp.less_or_equal.desc': "Vérifier si le nombre stocké est inférieur ou égal à l'entrée",
})

export const I18nProvider = ({ children }) => {
  const [lang, setLang] = useState('en')

  useEffect(() => {
    const saved = typeof window !== 'undefined' ? window.localStorage.getItem('lang') : null
    if (saved && translations[saved]) {
      setLang(saved)
    }
  }, [])

  const t = useMemo(() => {
    const dict = translations[lang] || translations.en
    return (key) => dict[key] || translations.en[key] || key
  }, [lang])

  const value = useMemo(() => ({
    lang,
    setLang: (l) => {
      if (translations[l]) {
        setLang(l)
        if (typeof window !== 'undefined') window.localStorage.setItem('lang', l)
      }
    },
    t
  }), [lang, t])

  return (
    <I18nContext.Provider value={value}>
      {children}
    </I18nContext.Provider>
  )
}

export const useI18n = () => useContext(I18nContext)
/* BEGIN: commented legacy i18n block (kept for reference, not used)
    // Déchiffrement on-chain
    'onchain.section_title': 'Étape 7 : Demande de déchiffrement on-chain',
    'onchain.goal_1': 'Comprendre le mécanisme requestDecryption',
    'onchain.goal_2': 'Apprendre le flux de rappel de déchiffrement asynchrone',
    'onchain.goal_3': 'Maîtriser les bonnes pratiques du déchiffrement on-chain',
    'onchain.contract_code': 'Code du contrat de déchiffrement on-chain :',
    'onchain.frontend_code': 'Code de demande de déchiffrement côté frontend :',
    'onchain.step1_title': 'Étape 1 : Saisir et stocker un nombre chiffré',
    'onchain.input_placeholder': 'Saisir un nombre (ex. : 42)',
    'onchain.storing': 'Chiffrement et stockage...',
    'onchain.encrypt_and_store': 'Chiffrer et stocker le nombre',
    'onchain.step2_title': 'Étape 2 : Demander le déchiffrement on-chain',
    'onchain.requesting': 'Demande en cours...',
    'onchain.request_decrypt': 'Demander le déchiffrement',
    'onchain.reset_state': 'Réinitialiser l\'état',
    'onchain.step3_title': 'Étape 3 : Suivi de l\'état du déchiffrement',
    'onchain.getting_status': 'Récupération de l\'état du déchiffrement...',
    'onchain.get_status_failed': 'Échec de la récupération de l\'état, veuillez vérifier la connexion réseau',
    'onchain.status_title': 'État du déchiffrement :',
    'onchain.status': 'Statut',
    'onchain.status_pending': 'Déchiffrement en cours...',
    'onchain.status_done': 'Déchiffrement terminé',
    'onchain.request_id': 'ID de requête',
    'onchain.none': 'Aucun',
    'onchain.decrypted_result': 'Résultat déchiffré',
    'onchain.waiting': 'En attente de déchiffrement...',
    'onchain.pending_hint_line1': 'Le déchiffrement est en cours et prend généralement 1 à 3 minutes.',
    'onchain.pending_hint_line2': 'Il est effectué de manière asynchrone par le KMS de Zama et se met à jour automatiquement.',
    'onchain.done_hint_prefix': 'Déchiffrement on-chain terminé. Le nombre d\'origine',
    'onchain.done_hint_middle': 'a été déchiffré en',
    'onchain.tip_store_then_request': 'Veuillez d\'abord stocker un nombre chiffré, puis demander le déchiffrement pour voir l\'état.',
    'onchain.features_title': 'Caractéristiques du déchiffrement on-chain :',
    'onchain.async': 'Traitement asynchrone',
    'onchain.async_desc': 'Le déchiffrement est géré de manière asynchrone par le réseau KMS après la demande',
    'onchain.security': 'Vérification de sécurité',
    'onchain.security_desc': 'Le résultat contient des preuves cryptographiques garantissant l\'exactitude',
    'onchain.state': 'Gestion d\'état',
    'onchain.state_desc': 'Le contrat maintient l\'état pour éviter les demandes en double',
    'onchain.events': 'Notifications d\'événement',
    'onchain.events_desc': 'Émet des événements à l\'achèvement pour l\'écoute côté frontend',
    'onchain.use_cases': 'Cas d\'utilisation :',
    'onchain.case_1': 'Divulguer l\'enchère la plus élevée après une vente aux enchères',
    'onchain.case_2': 'Publier les résultats du vote après la fin du vote',
    'onchain.case_3': 'Révéler l\'aléatoire dans les jeux',
    'onchain.case_4': 'Divulgation conditionnelle des résultats de calcul privés',
    'onchain.caveats': 'Mises en garde :',
    'onchain.irreversible': 'Le déchiffrement est irréversible une fois divulgué',
    'onchain.gas': 'Le déchiffrement consomme du gas',
    'onchain.congestion': 'La congestion du réseau peut augmenter le temps',
    'onchain.right_timing': 'Demander le déchiffrement au bon moment',
    'onchain.decrypt_prereq': 'Veuillez vous assurer que le portefeuille est connecté, le SDK initialisé, et qu\'un nombre est saisi',
    'onchain.store_success': 'Nombre chiffré stocké avec succès !',
    'onchain.store_failed': 'Échec du chiffrement+stockage :',
    'onchain.request_submitted': 'Demande de déchiffrement soumise. Veuillez patienter pour l\'achèvement on-chain...',
    'onchain.request_failed': 'Échec de la demande :',
    'onchain.reset_done': 'L\'état de déchiffrement a été réinitialisé',
    'onchain.reset_failed': 'Échec de la réinitialisation :',
    // FHE Calculations
    'fhe_calc.section_title': 'Step 6: FHE Calculations (Add/Sub/Mul/Div)',
    'fhe_calc.sdk_required_for_calc': 'SDK must be initialized before performing calculations',
    'fhe_calc.goal_1': 'Understand FHE homomorphic computation principles',
    'fhe_calc.goal_2': 'Learn operations on encrypted data',
    'fhe_calc.goal_3': 'Master usage of different operation types',
    'fhe_calc.contract_code': 'Smart Contract FHE Operation Code:',
    'fhe_calc.frontend_code': 'Frontend FHE Calculation Code:',
    'fhe_calc.step1_title': 'Step 1: Get your stored number',
    'fhe_calc.get_stored_number': 'Get stored number',
    'fhe_calc.current_stored': 'Current stored encrypted number',
    'fhe_calc.step2_title': 'Step 2: Select operation',
    'fhe_calc.step3_title': 'Step 3: Input operand',
    'fhe_calc.input_divisor_placeholder': 'Enter divisor (plaintext, not encrypted)',
    'fhe_calc.divide_note': 'Note: Division uses a plaintext divisor because FHE does not support ciphertext-by-ciphertext division.',
    'fhe_calc.input_operand_placeholder': 'Enter a number to operate on',
    'fhe_calc.encrypt_operand_note': 'This number will be encrypted and used in the operation with your stored number',
    'fhe_calc.processing': 'Processing...',
    'fhe_calc.execute_with': 'Execute {op}',
    'fhe_calc.calc_done': 'Calculation completed!',
    'fhe_calc.op_type': 'Operation Type',
    'fhe_calc.operand': 'Operand',
    'fhe_calc.result_handle': 'Result Handle',
    'fhe_calc.decrypt_to_view': 'Decrypt to view result',
    'fhe_calc.decrypted_result': 'Decrypted Result',
    'fhe_calc.features_title': 'FHE Calculation Features:',
    'fhe_calc.homomorphic': 'Homomorphic operations',
    'fhe_calc.homomorphic_desc': 'Compute directly on encrypted data without decryption',
    'fhe_calc.privacy': 'Privacy',
    'fhe_calc.privacy_desc': 'Data remains encrypted throughout computation',
    'fhe_calc.result_encrypted': 'Encrypted results',
    'fhe_calc.result_encrypted_desc': 'Results are encrypted; users decrypt to view',
    'fhe_calc.acl': 'Access control',
    'fhe_calc.acl_desc': 'Only authorized users can decrypt results',
    'fhe_calc.limits_title': 'Operation limits',
    'fhe_calc.divide': 'Division',
    'fhe_calc.divide_desc': 'Divisor must be plaintext',
    'fhe_calc.mod': 'Remainder',
    'fhe_calc.mod_desc': 'Modulus must be plaintext',
    'fhe_calc.gas': 'Gas usage',
    'fhe_calc.gas_desc': 'FHE operations cost more gas than regular operations',
    'fhe_calc.precision': 'Precision',
    'fhe_calc.precision_desc': 'Integer operations only; floating point is not supported',
    'fhe_calc.fetch_failed': 'Failed to fetch stored number:',
    'fhe_calc.invalid_divisor': 'Please enter a valid divisor (integer > 0)',
    'fhe_calc.enter_operand': 'Please enter the operand',
    'fhe_calc.calc_failed': 'Calculation failed:',
    'fhe_calc.no_result_or_wallet': 'No result to decrypt or wallet not connected',
    'fhe_calc.decrypt_failed': 'Decryption failed:',
    'fhe_calc.op.add.label': 'Addition (+)',
    'fhe_calc.op.add.desc': 'Add your stored number to the new number',
    'fhe_calc.op.subtract.label': 'Subtraction (-)',
    'fhe_calc.op.subtract.desc': 'Subtract the new number from your stored number',
    'fhe_calc.op.multiply.label': 'Multiplication (×)',
    'fhe_calc.op.multiply.desc': 'Multiply your stored number by the new number',
    'fhe_calc.op.divide.label': 'Division (÷)',
    'fhe_calc.op.divide.desc': 'Divide your stored number by the specified number (plaintext divisor)'
    // FHE 计算
    'fhe_calc.section_title': '步骤6: FHE计算功能（加减乘除）',
    'fhe_calc.sdk_required_for_calc': 'SDK必须初始化后才能进行计算操作',
    'fhe_calc.goal_1': '理解FHE同态计算原理',
    'fhe_calc.goal_2': '学习加密数据的运算操作',
    'fhe_calc.goal_3': '掌握不同运算类型的使用方法',
    'fhe_calc.contract_code': '智能合约FHE运算代码:',
    'fhe_calc.frontend_code': '前端FHE计算调用代码:',
    'fhe_calc.step1_title': '步骤1: 获取你存储的数字',
    'fhe_calc.get_stored_number': '获取存储的数字',
    'fhe_calc.current_stored': '当前存储加密数字',
    'fhe_calc.step2_title': '步骤2: 选择运算类型',
    'fhe_calc.step3_title': '步骤3: 输入操作数',
    'fhe_calc.input_divisor_placeholder': '输入除数（明文，不加密）',
    'fhe_calc.divide_note': '注意：除法运算中，除数必须是明文（不加密），因为FHE不支持密文除密文。',
    'fhe_calc.input_operand_placeholder': '输入要运算的数字',
    'fhe_calc.encrypt_operand_note': '这个数字将被加密后与你的存储数字进行运算',
    'fhe_calc.processing': '计算中...',
    'fhe_calc.execute_with': '执行{op}',
    'fhe_calc.calc_done': '计算完成！',
    'fhe_calc.op_type': '运算类型',
    'fhe_calc.operand': '操作数',
    'fhe_calc.result_handle': '结果句柄',
    'fhe_calc.decrypt_to_view': '解密查看结果',
    'fhe_calc.decrypted_result': '解密结果',
    'fhe_calc.features_title': 'FHE计算特性：',
    'fhe_calc.homomorphic': '同态运算',
    'fhe_calc.homomorphic_desc': '直接在加密数据上进行计算，无需解密',
    'fhe_calc.privacy': '隐私保护',
    'fhe_calc.privacy_desc': '计算过程中数据始终保持加密状态',
    'fhe_calc.result_encrypted': '结果加密',
    'fhe_calc.result_encrypted_desc': '计算结果也是加密的，需要用户解密查看',
    'fhe_calc.acl': '权限控制',
    'fhe_calc.acl_desc': '只有授权用户可以解密计算结果',
    'fhe_calc.limits_title': '运算限制说明',
    'fhe_calc.divide': '除法运算',
    'fhe_calc.divide_desc': '除数必须是明文，不能是密文',
    'fhe_calc.mod': '取余运算',
    'fhe_calc.mod_desc': '与除法类似，模数必须是明文',
    'fhe_calc.gas': 'Gas消耗',
    'fhe_calc.gas_desc': 'FHE运算比普通运算消耗更多Gas',
    'fhe_calc.precision': '精度限制',
    'fhe_calc.precision_desc': '仅支持整数运算，不支持浮点数',
    'fhe_calc.fetch_failed': '获取存储数字失败:',
    'fhe_calc.invalid_divisor': '请输入有效的除数（大于0的整数）',
    'fhe_calc.enter_operand': '请输入要计算的数字',
    'fhe_calc.calc_failed': '计算失败:',
    'fhe_calc.no_result_or_wallet': '没有可解密的结果或钱包未连接',
    'fhe_calc.decrypt_failed': '解密失败:',
    'fhe_calc.op.add.label': '加法 (+)',
    'fhe_calc.op.add.desc': '将你的存储数字与新数字相加',
    'fhe_calc.op.subtract.label': '减法 (-)',
    'fhe_calc.op.subtract.desc': '从你的存储数字中减去新数字',
    'fhe_calc.op.multiply.label': '乘法 (×)',
    'fhe_calc.op.multiply.desc': '将你的存储数字与新数字相乘',
    'fhe_calc.op.divide.label': '除法 (÷)',
    'fhe_calc.op.divide.desc': '将你的存储数字除以指定数字（明文除数）',
    // Calculs FHE
    'fhe_calc.section_title': 'Étape 6 : Calculs FHE (Addition/Soustraction/Multiplication/Division)',
    'fhe_calc.sdk_required_for_calc': 'Le SDK doit être initialisé avant d\'effectuer des calculs',
    'fhe_calc.goal_1': 'Comprendre les principes du calcul homomorphe FHE',
    'fhe_calc.goal_2': 'Apprendre les opérations sur les données chiffrées',
    'fhe_calc.goal_3': 'Maîtriser l\'utilisation des différents types d\'opérations',
    'fhe_calc.contract_code': 'Code des opérations FHE du contrat :',
    'fhe_calc.frontend_code': 'Code frontend pour les calculs FHE :',
    'fhe_calc.step1_title': 'Étape 1 : Récupérer votre nombre stocké',
    'fhe_calc.get_stored_number': 'Récupérer le nombre stocké',
    'fhe_calc.current_stored': 'Encrypted Nombre stocké actuel',
    'fhe_calc.step2_title': 'Étape 2 : Choisir l\'opération',
    'fhe_calc.step3_title': 'Étape 3 : Saisir l\'opérande',
    'fhe_calc.input_divisor_placeholder': 'Saisir le diviseur (en clair, non chiffré)',
    'fhe_calc.divide_note': 'Remarque : La division utilise un diviseur en clair car FHE ne prend pas en charge la division chiffré/chiffré.',
    'fhe_calc.input_operand_placeholder': 'Saisir le nombre à utiliser',
    'fhe_calc.encrypt_operand_note': 'Ce nombre sera chiffré puis utilisé avec votre nombre stocké',
    'fhe_calc.processing': 'Calcul en cours...',
    'fhe_calc.execute_with': 'Exécuter {op}',
    'fhe_calc.calc_done': 'Calcul terminé !',
    'fhe_calc.op_type': 'Type d\'opération',
    'fhe_calc.operand': 'Opérande',
    'fhe_calc.result_handle': 'Poignée du résultat',
    'fhe_calc.decrypt_to_view': 'Déchiffrer pour voir le résultat',
    'fhe_calc.decrypted_result': 'Résultat déchiffré',
    'fhe_calc.features_title': 'Caractéristiques des calculs FHE :',
    'fhe_calc.homomorphic': 'Opérations homomorphes',
    'fhe_calc.homomorphic_desc': 'Calculer directement sur des données chiffrées sans déchiffrement',
    'fhe_calc.privacy': 'Confidentialité',
    'fhe_calc.privacy_desc': 'Les données restent chiffrées pendant le calcul',
    'fhe_calc.result_encrypted': 'Résultat chiffré',
    'fhe_calc.result_encrypted_desc': 'Les résultats sont chiffrés ; l\'utilisateur déchiffre pour voir',
    'fhe_calc.acl': 'Contrôle d\'accès',
    'fhe_calc.acl_desc': 'Seuls les utilisateurs autorisés peuvent déchiffrer les résultats',
    'fhe_calc.limits_title': 'Limites des opérations',
    'fhe_calc.divide': 'Division',
    'fhe_calc.divide_desc': 'Le diviseur doit être en clair',
    'fhe_calc.mod': 'Modulo',
    'fhe_calc.mod_desc': 'Le modulo doit être en clair',
    'fhe_calc.gas': 'Consommation de gas',
    'fhe_calc.gas_desc': 'Les calculs FHE consomment plus de gas que les opérations normales',
    'fhe_calc.precision': 'Précision',
    'fhe_calc.precision_desc': 'Opérations entières uniquement ; pas de flottants',
    'fhe_calc.fetch_failed': 'Échec de la récupération du nombre stocké :',
    'fhe_calc.invalid_divisor': 'Veuillez saisir un diviseur valide (entier > 0)',
    'fhe_calc.enter_operand': 'Veuillez saisir l\'opérande',
    'fhe_calc.calc_failed': 'Échec du calcul :',
    'fhe_calc.no_result_or_wallet': 'Aucun résultat à déchiffrer ou portefeuille non connecté',
    'fhe_calc.decrypt_failed': 'Échec du déchiffrement :',
    'fhe_calc.op.add.label': 'Addition (+)',
    'fhe_calc.op.add.desc': 'Ajouter votre nombre stocké au nouveau nombre',
    'fhe_calc.op.subtract.label': 'Soustraction (-)',
    'fhe_calc.op.subtract.desc': 'Soustraire le nouveau nombre de votre nombre stocké',
    'fhe_calc.op.multiply.label': 'Multiplication (×)',
    'fhe_calc.op.multiply.desc': 'Multiplier votre nombre stocké par le nouveau nombre',
    'fhe_calc.op.divide.label': 'Division (÷)',
    'fhe_calc.op.divide.desc': 'Diviser votre nombre stocké par le nombre spécifié (diviseur en clair)'
    // Number Comparison
    'cmp.section_title': 'FHE Encrypted Number Comparison',
    'cmp.sdk_required_for_cmp': 'SDK must be initialized before performing comparison',
    'cmp.goal_1': 'Master comparison operations on encrypted data',
    'cmp.goal_2': 'Learn different comparison operators',
    'cmp.goal_3': 'Understand handling of encrypted booleans',
    'cmp.goal_4': 'Experience privacy-preserving condition checks',
    'cmp.contract_code': 'Smart Contract Comparison Code:',
    'cmp.frontend_code': 'Frontend Comparison Code:',
    'cmp.plan1_title': 'Plan A: Compare against a number',
    'cmp.plan1_desc': 'Compare your stored encrypted number with the input number',
    'cmp.no_number_tip': 'You have not stored a number. Please store a number first in the storage chapter.',
    'cmp.select_type': 'Select comparison type:',
    'cmp.input_number_label': 'Input number to compare:',
    'cmp.input_number_placeholder': 'Enter a number to compare',
    'cmp.comparing': 'Comparing...',
    'cmp.execute_compare': 'Execute comparison',
    'cmp.plan2_title': 'Plan B: Compare two users\' numbers',
    'cmp.plan2_desc': 'Compare the encrypted numbers stored by two different users',
    'cmp.user_a': 'User A Address:',
    'cmp.user_a_placeholder': 'Enter User A address',
    'cmp.user_b': 'User B Address:',
    'cmp.user_b_placeholder': 'Enter User B address',
    'cmp.use_my_address': 'Use my address',
    'cmp.select_type_simple': 'Comparison Type:',
    'cmp.equal_simple': 'Equal',
    'cmp.greater_simple': 'User A > User B',
    'cmp.less_simple': 'User A < User B',
    'cmp.compare_two_users': 'Compare two users',
    'cmp.view_result': 'View comparison result',
    'cmp.decrypt_tip': 'After comparison completes, click the button to decrypt and view the result',
    'cmp.decrypting': 'Decrypting...',
    'cmp.decrypt_result': 'Decrypt comparison result',
    'cmp.result_title': 'Comparison Result:',
    'cmp.true': 'TRUE ✓',
    'cmp.false': 'FALSE ✗',
    'cmp.condition_true': 'Condition satisfied',
    'cmp.condition_false': 'Condition not satisfied',
    'cmp.features_title': 'Encrypted comparison features:',
    'cmp.privacy': 'Privacy',
    'cmp.privacy_desc': 'Data remains encrypted during comparison',
    'cmp.result_encrypted': 'Encrypted result',
    'cmp.result_encrypted_desc': 'Boolean result is encrypted as well',
    'cmp.zk': 'Zero-knowledge',
    'cmp.zk_desc': 'Third parties cannot know values; only the result is revealed',
    'cmp.composability': 'Composability',
    'cmp.composability_desc': 'Use the result in more complex logic',
    'cmp.use_cases': 'Use cases',
    'cmp.case_1': 'Private auctions (compare bids)',
    'cmp.case_2': 'Secret voting (compare vote counts)',
    'cmp.case_3': 'Credit assessment (compare scores)',
    'cmp.case_4': 'Private ranking (compare user scores)',
    'cmp.ensure_wallet_and_value': 'Please connect your wallet and enter a comparison number',
    'cmp.no_stored_number': 'You have not stored a number in the contract. Please store one first.',
    'cmp.compare_success': 'Comparison submitted! Wait for confirmation to view the result.',
    'cmp.compare_failed': 'Comparison failed:',
    'cmp.enter_two_addresses': 'Please enter two user addresses',
    'cmp.users_compare_success': 'Users comparison submitted! Wait for confirmation to view the result.',
    'cmp.users_compare_failed': 'Users comparison failed:',
    'cmp.no_result_found': 'No comparison result found. Please perform a comparison first.',
    'cmp.decrypt_failed': 'Decrypt comparison result failed:',
    'cmp.equal.label': 'Equal (==)',
    'cmp.equal.desc': 'Check if stored number equals the input',
    'cmp.greater.label': 'Greater (>)',
    'cmp.greater.desc': 'Check if stored number is greater than the input',
    'cmp.less.label': 'Less (<)',
    'cmp.less.desc': 'Check if stored number is less than the input',
    'cmp.greater_or_equal.label': 'Greater or equal (>=)',
    'cmp.greater_or_equal.desc': 'Check if stored number is greater than or equal to the input',
    'cmp.less_or_equal.label': 'Less or equal (<=)',
    'cmp.less_or_equal.desc': 'Check if stored number is less than or equal to the input',
    // 数字比较
    'cmp.section_title': 'FHE加密数字比较',
    'cmp.sdk_required_for_cmp': 'SDK必须初始化后才能进行比较操作',
    'cmp.goal_1': '掌握加密数据的比较操作',
    'cmp.goal_2': '学习不同比较运算符的使用',
    'cmp.goal_3': '理解加密布尔值的处理',
    'cmp.goal_4': '体验保护隐私的条件判断',
    'cmp.contract_code': '智能合约比较代码:',
    'cmp.frontend_code': '前端比较代码:',
    'cmp.plan1_title': '方案一：与指定数字比较',
    'cmp.plan1_desc': '将你存储的加密数字与输入的数字进行比较',
    'cmp.no_number_tip': '您还没有存储数字，请先前往数字存储章节存储一个数字',
    'cmp.select_type': '选择比较类型：',
    'cmp.input_number_label': '输入比较数字：',
    'cmp.input_number_placeholder': '请输入要比较的数字',
    'cmp.comparing': '比较中...',
    'cmp.execute_compare': '执行比较',
    'cmp.plan2_title': '方案二：比较两个用户的数字',
    'cmp.plan2_desc': '比较两个不同用户存储的加密数字大小',
    'cmp.user_a': '用户A地址：',
    'cmp.user_a_placeholder': '输入用户A的地址',
    'cmp.user_b': '用户B地址：',
    'cmp.user_b_placeholder': '输入用户B的地址',
    'cmp.use_my_address': '使用我的地址',
    'cmp.select_type_simple': '比较类型：',
    'cmp.equal_simple': '相等',
    'cmp.greater_simple': '用户A 大于 用户B',
    'cmp.less_simple': '用户A 小于 用户B',
    'cmp.compare_two_users': '比较两个用户',
    'cmp.view_result': '查看比较结果',
    'cmp.decrypt_tip': '比较操作完成后，点击按钮解密查看结果',
    'cmp.decrypting': '解密中...',
    'cmp.decrypt_result': '解密比较结果',
    'cmp.result_title': '比较结果：',
    'cmp.true': 'TRUE ✓',
    'cmp.false': 'FALSE ✗',
    'cmp.condition_true': '条件成立',
    'cmp.condition_false': '条件不成立',
    'cmp.features_title': '加密比较的特点：',
    'cmp.privacy': '隐私保护',
    'cmp.privacy_desc': '比较过程中数据始终保持加密状态',
    'cmp.result_encrypted': '结果加密',
    'cmp.result_encrypted_desc': '比较结果（布尔值）也是加密的',
    'cmp.zk': '零知识',
    'cmp.zk_desc': '第三方无法知道具体的数值，只能知道比较结果',
    'cmp.composability': '可组合性',
    'cmp.composability_desc': '可以基于比较结果进行更复杂的逻辑运算',
    'cmp.use_cases': '应用场景',
    'cmp.case_1': '隐私拍卖（比较出价高低）',
    'cmp.case_2': '保密投票（比较选票数量）',
    'cmp.case_3': '信用评估（比较信用分数）',
    'cmp.case_4': '隐私排名（比较用户得分）',
    'cmp.ensure_wallet_and_value': '请确保钱包已连接且输入了比较数字',
    'cmp.no_stored_number': '您还没有在合约中存储数字，请先存储一个数字',
    'cmp.compare_success': '比较操作成功！等待交易确认后可以查看结果。',
    'cmp.compare_failed': '比较失败:',
    'cmp.enter_two_addresses': '请输入两个用户地址',
    'cmp.users_compare_success': '用户比较操作成功！等待交易确认后可以查看结果。',
    'cmp.users_compare_failed': '用户比较失败:',
    'cmp.no_result_found': '没有找到比较结果，请先进行比较操作',
    'cmp.decrypt_failed': '解密比较结果失败:',
    'cmp.equal.label': '等于 (==)',
    'cmp.equal.desc': '检查存储数字是否等于输入数字',
    'cmp.greater.label': '大于 (>)',
    'cmp.greater.desc': '检查存储数字是否大于输入数字',
    'cmp.less.label': '小于 (<)',
    'cmp.less.desc': '检查存储数字是否小于输入数字',
    'cmp.greater_or_equal.label': '大于等于 (>=)',
    'cmp.greater_or_equal.desc': '检查存储数字是否大于等于输入数字',
    'cmp.less_or_equal.label': '小于等于 (<=)',
    'cmp.less_or_equal.desc': '检查存储数字是否小于等于输入数字',
    // Comparaison de nombres
    'cmp.section_title': 'Comparaison de nombres chiffrés FHE',
    'cmp.sdk_required_for_cmp': 'Le SDK doit être initialisé avant d\'effectuer une comparaison',
    'cmp.goal_1': 'Maîtriser les opérations de comparaison sur des données chiffrées',
    'cmp.goal_2': 'Apprendre différents opérateurs de comparaison',
    'cmp.goal_3': 'Comprendre le traitement des booléens chiffrés',
    'cmp.goal_4': 'Expérimenter des conditions préservant la confidentialité',
    'cmp.contract_code': 'Code de comparaison du contrat :',
    'cmp.frontend_code': 'Code frontend de comparaison :',
    'cmp.plan1_title': 'Plan A : Comparer avec un nombre',
    'cmp.plan1_desc': 'Comparer votre nombre chiffré stocké avec le nombre saisi',
    'cmp.no_number_tip': 'Vous n\'avez pas de nombre stocké. Veuillez d\'abord en stocker un.',
    'cmp.select_type': 'Choisir le type de comparaison :',
    'cmp.input_number_label': 'Saisir le nombre à comparer :',
    'cmp.input_number_placeholder': 'Saisir un nombre à comparer',
    'cmp.comparing': 'Comparaison en cours...',
    'cmp.execute_compare': 'Exécuter la comparaison',
    'cmp.plan2_title': 'Plan B : Comparer les nombres de deux utilisateurs',
    'cmp.plan2_desc': 'Comparer les nombres chiffrés stockés par deux utilisateurs',
    'cmp.user_a': 'Adresse de l\'utilisateur A :',
    'cmp.user_a_placeholder': 'Saisir l\'adresse de l\'utilisateur A',
    'cmp.user_b': 'Adresse de l\'utilisateur B :',
    'cmp.user_b_placeholder': 'Saisir l\'adresse de l\'utilisateur B',
    'cmp.use_my_address': 'Utiliser mon adresse',
    'cmp.select_type_simple': 'Type de comparaison :',
    'cmp.equal_simple': 'Égal',
    'cmp.greater_simple': 'Utilisateur A > Utilisateur B',
    'cmp.less_simple': 'Utilisateur A < Utilisateur B',
    'cmp.compare_two_users': 'Comparer deux utilisateurs',
    'cmp.view_result': 'Voir le résultat de la comparaison',
    'cmp.decrypt_tip': 'Après la comparaison, cliquez pour déchiffrer et voir le résultat',
    'cmp.decrypting': 'Déchiffrement...',
    'cmp.decrypt_result': 'Déchiffrer le résultat de la comparaison',
    'cmp.result_title': 'Résultat de la comparaison :',
    'cmp.true': 'TRUE ✓',
    'cmp.false': 'FALSE ✗',
    'cmp.condition_true': 'Condition satisfaite',
    'cmp.condition_false': 'Condition non satisfaite',
    'cmp.features_title': 'Caractéristiques de la comparaison chiffrée :',
    'cmp.privacy': 'Confidentialité',
    'cmp.privacy_desc': 'Les données restent chiffrées pendant la comparaison',
    'cmp.result_encrypted': 'Résultat chiffré',
    'cmp.result_encrypted_desc': 'Le résultat booléen est également chiffré',
    'cmp.zk': 'Zero-knowledge',
    'cmp.zk_desc': 'Les tiers ne connaissent pas les valeurs, seulement le résultat',
    'cmp.composability': 'Composabilité',
    'cmp.composability_desc': 'Utiliser le résultat dans des logiques plus complexes',
    'cmp.use_cases': 'Cas d\'utilisation',
    'cmp.case_1': 'Enchères privées (comparer les offres)',
    'cmp.case_2': 'Vote secret (comparer le nombre de votes)',
    'cmp.case_3': 'Évaluation de crédit (comparer les scores)',
    'cmp.case_4': 'Classement privé (comparer les scores des utilisateurs)',
    'cmp.ensure_wallet_and_value': 'Veuillez connecter le portefeuille et saisir le nombre à comparer',
    'cmp.no_stored_number': 'Vous n\'avez pas de nombre stocké dans le contrat. Veuillez d\'abord en stocker un.',
    'cmp.compare_success': 'Comparaison soumise ! Attendez la confirmation pour voir le résultat.',
    'cmp.compare_failed': 'Échec de la comparaison :',
    'cmp.enter_two_addresses': 'Veuillez saisir deux adresses d\'utilisateurs',
    'cmp.users_compare_success': 'Comparaison entre utilisateurs soumise ! Attendez la confirmation.',
    'cmp.users_compare_failed': 'Échec de la comparaison entre utilisateurs :',
    'cmp.no_result_found': 'Aucun résultat trouvé. Veuillez d\'abord effectuer une comparaison',
    'cmp.decrypt_failed': 'Échec du déchiffrement du résultat :',
    'cmp.equal.label': 'Égal (==)',
    'cmp.equal.desc': 'Vérifier si le nombre stocké est égal à l\'entrée',
    'cmp.greater.label': 'Supérieur (>)',
    'cmp.greater.desc': 'Vérifier si le nombre stocké est supérieur à l\'entrée',
    'cmp.less.label': 'Inférieur (<)',
    'cmp.less.desc': 'Vérifier si le nombre stocké est inférieur à l\'entrée',
    'cmp.greater_or_equal.label': 'Supérieur ou égal (>=)',
    'cmp.greater_or_equal.desc': 'Vérifier si le nombre stocké est supérieur ou égal à l\'entrée',
    'cmp.less_or_equal.label': 'Inférieur ou égal (<=)',
    'cmp.less_or_equal.desc': 'Vérifier si le nombre stocké est inférieur ou égal à l\'entrée',
    'fhe_calc.execute': 'Execute',
    'fhe_calc.execute': '执行',
    'fhe_calc.execute': 'Exécuter',
*/
